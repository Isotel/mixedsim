<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE eagle SYSTEM "eagle.dtd">
<eagle version="7.7.0">
<drawing>
<settings>
<setting alwaysvectorfont="no"/>
<setting verticaltext="up"/>
</settings>
<grid distance="0.1" unitdist="inch" unit="inch" style="lines" multiple="1" display="no" altdistance="0.01" altunitdist="inch" altunit="inch"/>
<layers>
<layer number="1" name="Top" color="4" fill="1" visible="yes" active="yes"/>
<layer number="2" name="Route2" color="1" fill="3" visible="no" active="yes"/>
<layer number="3" name="Route3" color="4" fill="3" visible="no" active="yes"/>
<layer number="4" name="Route4" color="1" fill="4" visible="no" active="yes"/>
<layer number="5" name="Route5" color="4" fill="4" visible="no" active="yes"/>
<layer number="6" name="Route6" color="1" fill="8" visible="no" active="yes"/>
<layer number="7" name="Route7" color="4" fill="8" visible="no" active="yes"/>
<layer number="8" name="Route8" color="1" fill="2" visible="no" active="yes"/>
<layer number="9" name="Route9" color="4" fill="2" visible="no" active="yes"/>
<layer number="10" name="Route10" color="1" fill="7" visible="no" active="yes"/>
<layer number="11" name="Route11" color="4" fill="7" visible="no" active="yes"/>
<layer number="12" name="Route12" color="1" fill="5" visible="no" active="yes"/>
<layer number="13" name="Route13" color="4" fill="5" visible="no" active="yes"/>
<layer number="14" name="Route14" color="1" fill="6" visible="no" active="yes"/>
<layer number="15" name="Route15" color="4" fill="6" visible="no" active="yes"/>
<layer number="16" name="Bottom" color="1" fill="1" visible="yes" active="yes"/>
<layer number="17" name="Pads" color="2" fill="1" visible="yes" active="yes"/>
<layer number="18" name="Vias" color="2" fill="1" visible="yes" active="yes"/>
<layer number="19" name="Unrouted" color="6" fill="1" visible="no" active="yes"/>
<layer number="20" name="Dimension" color="15" fill="1" visible="yes" active="yes"/>
<layer number="21" name="tPlace" color="7" fill="1" visible="yes" active="yes"/>
<layer number="22" name="bPlace" color="7" fill="1" visible="yes" active="yes"/>
<layer number="23" name="tOrigins" color="15" fill="1" visible="yes" active="yes"/>
<layer number="24" name="bOrigins" color="15" fill="1" visible="yes" active="yes"/>
<layer number="25" name="tNames" color="7" fill="1" visible="yes" active="yes"/>
<layer number="26" name="bNames" color="7" fill="1" visible="yes" active="yes"/>
<layer number="27" name="tValues" color="7" fill="1" visible="yes" active="yes"/>
<layer number="28" name="bValues" color="7" fill="1" visible="yes" active="yes"/>
<layer number="29" name="tStop" color="7" fill="3" visible="no" active="yes"/>
<layer number="30" name="bStop" color="7" fill="6" visible="no" active="yes"/>
<layer number="31" name="tCream" color="7" fill="4" visible="no" active="yes"/>
<layer number="32" name="bCream" color="7" fill="5" visible="no" active="yes"/>
<layer number="33" name="tFinish" color="6" fill="3" visible="no" active="yes"/>
<layer number="34" name="bFinish" color="6" fill="6" visible="no" active="yes"/>
<layer number="35" name="tGlue" color="7" fill="4" visible="no" active="yes"/>
<layer number="36" name="bGlue" color="7" fill="5" visible="no" active="yes"/>
<layer number="37" name="tTest" color="7" fill="1" visible="no" active="yes"/>
<layer number="38" name="bTest" color="7" fill="1" visible="no" active="yes"/>
<layer number="39" name="tKeepout" color="4" fill="11" visible="yes" active="yes"/>
<layer number="40" name="bKeepout" color="1" fill="11" visible="no" active="yes"/>
<layer number="41" name="tRestrict" color="4" fill="10" visible="yes" active="yes"/>
<layer number="42" name="bRestrict" color="1" fill="10" visible="yes" active="yes"/>
<layer number="43" name="vRestrict" color="2" fill="10" visible="yes" active="yes"/>
<layer number="44" name="Drills" color="7" fill="1" visible="no" active="yes"/>
<layer number="45" name="Holes" color="7" fill="1" visible="yes" active="yes"/>
<layer number="46" name="Milling" color="3" fill="1" visible="no" active="yes"/>
<layer number="47" name="Measures" color="7" fill="1" visible="no" active="yes"/>
<layer number="48" name="Document" color="7" fill="1" visible="no" active="yes"/>
<layer number="49" name="Reference" color="7" fill="1" visible="no" active="yes"/>
<layer number="50" name="dxf" color="7" fill="1" visible="no" active="no"/>
<layer number="51" name="tDocu" color="6" fill="1" visible="yes" active="yes"/>
<layer number="52" name="bDocu" color="7" fill="1" visible="no" active="yes"/>
<layer number="90" name="Modules" color="5" fill="1" visible="yes" active="yes"/>
<layer number="91" name="Nets" color="2" fill="1" visible="no" active="yes"/>
<layer number="92" name="Busses" color="1" fill="1" visible="no" active="yes"/>
<layer number="93" name="Pins" color="2" fill="1" visible="yes" active="yes"/>
<layer number="94" name="Symbols" color="4" fill="1" visible="yes" active="yes"/>
<layer number="95" name="Names" color="7" fill="1" visible="yes" active="yes"/>
<layer number="96" name="Values" color="7" fill="1" visible="yes" active="yes"/>
<layer number="97" name="Info" color="7" fill="1" visible="yes" active="yes"/>
<layer number="98" name="Guide" color="6" fill="1" visible="yes" active="yes"/>
<layer number="99" name="SpiceOrder" color="5" fill="1" visible="yes" active="yes"/>
<layer number="110" name="spice" color="7" fill="1" visible="yes" active="yes"/>
<layer number="250" name="Descript" color="3" fill="1" visible="no" active="no"/>
<layer number="251" name="SMDround" color="12" fill="11" visible="no" active="no"/>
</layers>
<library>
<description>&lt;b&gt;Mixed Signal ngSpice Simulator Library&lt;/b&gt;
&lt;hr&gt;
The library contains mixed signal, analog, hybrid, and digital components introduced by XSpice compiled with the &lt;a href="http://ngspice.org"&gt;ngSpice&lt;/a&gt; as described in the ngspice User Manual version 26, &lt;a href="http://ngspice.org"&gt;http://ngspice.org&lt;/a&gt;.
Library is to be used with the ngspice.ulp provided by Uros Platise from &lt;a href="http://isotel.eu/mixedsim"&gt;Isotel GmbH&lt;/a&gt;. Make sure you're up-to-date by downloading the most recent version from &lt;a href="http://github.com/isotel/mixedsim"&gt;GitHub&lt;/a&gt;.
&lt;p&gt;
Library includes spice documentation extracted from the ngspice documentation version 26 which is a Copyright 1996 The Regents of the University of California.
&lt;p&gt;
Library includes ngspice primitives. Since ngspice is a mixed signal simulator it distinguishes between three data types:&lt;ul&gt;
&lt;li&gt;spice voltages and currents native to circuits. These have no special markings in symbols and are treated as used as normal pins.
&lt;li&gt;Digital signals which may be in one of the 12 ngspice states, denoted by a prefix &lt;b&gt;#&lt;/b&gt; character in symbol pin names, and
&lt;li&gt;Real values, prefixed with the &lt;b&gt;~&lt;/b&gt; character in symbol pin names.
&lt;/ul&gt;
To bridge signal from one to another special hybrid components are to be used, such as ADC_BUF, DAC_BUF, and others.
&lt;p&gt;
Another eagle specfic components are called:&lt;ul&gt;
&lt;li&gt;spice-port, used to form sub-circuits either of a whole schematics or just selected sheets of the schematics, and
&lt;li&gt;spice-xport, used to source an external circuitry via Eagle module's, without the need of creating new components.
&lt;/ul&gt;
 See ngspice.ulp for more information and examples provided by the &lt;a href="http://isotel.eu/mixedsim"&gt;Isotel Mixed Simulation Project&lt;/a&gt;.
&lt;/p&gt;</description>
<packages>
<package name="VSOURCE">
<wire x1="-2.54" y1="1.27" x2="0" y2="1.27" width="0.127" layer="21"/>
<wire x1="0" y1="1.27" x2="2.54" y2="1.27" width="0.127" layer="21"/>
<wire x1="-1.27" y1="0.635" x2="0" y2="0.635" width="0.127" layer="21"/>
<wire x1="0" y1="0.635" x2="1.27" y2="0.635" width="0.127" layer="21"/>
<wire x1="-1.27" y1="-1.27" x2="0" y2="-1.27" width="0.127" layer="21"/>
<wire x1="0" y1="-1.27" x2="1.27" y2="-1.27" width="0.127" layer="21"/>
<wire x1="-2.54" y1="-0.635" x2="0" y2="-0.635" width="0.127" layer="21"/>
<wire x1="0" y1="-0.635" x2="2.54" y2="-0.635" width="0.127" layer="21"/>
<wire x1="0" y1="0.635" x2="0" y2="-0.635" width="0.127" layer="21"/>
<wire x1="0" y1="1.27" x2="0" y2="1.905" width="0.127" layer="21"/>
<wire x1="0" y1="-1.905" x2="0" y2="-1.27" width="0.127" layer="21"/>
<pad name="2" x="0" y="-2.54" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="1" x="0" y="2.54" drill="0.8128" diameter="1.397" shape="square"/>
<text x="1.27" y="1.905" size="1.27" layer="21">&gt;NAME</text>
</package>
<package name="SPICE4">
<wire x1="-6.35" y1="1.27" x2="-6.35" y2="-1.27" width="0.127" layer="21"/>
<wire x1="-6.35" y1="-1.27" x2="6.35" y2="-1.27" width="0.127" layer="21"/>
<wire x1="6.35" y1="-1.27" x2="6.35" y2="1.27" width="0.127" layer="21"/>
<wire x1="6.35" y1="1.27" x2="-6.35" y2="1.27" width="0.127" layer="21"/>
<pad name="1" x="-3.81" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="2" x="-1.27" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="3" x="1.27" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="4" x="3.81" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<text x="-6.35" y="2.54" size="1.27" layer="21">SPICEOBJECT</text>
</package>
<package name="SPICE6">
<wire x1="-8.89" y1="1.27" x2="-8.89" y2="-1.27" width="0.127" layer="21"/>
<wire x1="-8.89" y1="-1.27" x2="8.89" y2="-1.27" width="0.127" layer="21"/>
<wire x1="8.89" y1="-1.27" x2="8.89" y2="1.27" width="0.127" layer="21"/>
<wire x1="8.89" y1="1.27" x2="-8.89" y2="1.27" width="0.127" layer="21"/>
<pad name="1" x="-6.35" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="2" x="-3.81" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="3" x="-1.27" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="4" x="1.27" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<text x="-8.89" y="2.54" size="1.27" layer="21">SPICEOBJECT</text>
<pad name="5" x="3.81" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="6" x="6.35" y="0" drill="0.8128" diameter="1.397" shape="square"/>
</package>
<package name="SPICE2">
<wire x1="-6.35" y1="1.27" x2="-6.35" y2="-1.27" width="0.127" layer="21"/>
<wire x1="-6.35" y1="-1.27" x2="1.27" y2="-1.27" width="0.127" layer="21"/>
<wire x1="1.27" y1="-1.27" x2="1.27" y2="1.27" width="0.127" layer="21"/>
<wire x1="1.27" y1="1.27" x2="-6.35" y2="1.27" width="0.127" layer="21"/>
<pad name="1" x="-3.81" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="2" x="-1.27" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<text x="-6.35" y="2.54" size="1.27" layer="21">SPICEOBJECT</text>
</package>
<package name="SPICE3">
<wire x1="-6.35" y1="1.27" x2="-6.35" y2="-1.27" width="0.127" layer="21"/>
<wire x1="-6.35" y1="-1.27" x2="3.81" y2="-1.27" width="0.127" layer="21"/>
<wire x1="3.81" y1="-1.27" x2="3.81" y2="1.27" width="0.127" layer="21"/>
<wire x1="3.81" y1="1.27" x2="-6.35" y2="1.27" width="0.127" layer="21"/>
<pad name="1" x="-3.81" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="2" x="-1.27" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="3" x="1.27" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<text x="-6.35" y="2.54" size="1.27" layer="21">SPICEOBJECT</text>
</package>
<package name="SPICE1">
<wire x1="-2.54" y1="1.27" x2="-2.54" y2="-1.27" width="0.127" layer="21"/>
<wire x1="-2.54" y1="-1.27" x2="2.54" y2="-1.27" width="0.127" layer="21"/>
<wire x1="2.54" y1="-1.27" x2="2.54" y2="1.27" width="0.127" layer="21"/>
<wire x1="2.54" y1="1.27" x2="-2.54" y2="1.27" width="0.127" layer="21"/>
<pad name="1" x="0" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<text x="-2.54" y="2.54" size="1.27" layer="21">SPICEOBJECT</text>
</package>
<package name="SPICE7">
<wire x1="-10.16" y1="1.27" x2="-10.16" y2="-1.27" width="0.127" layer="21"/>
<wire x1="-10.16" y1="-1.27" x2="10.16" y2="-1.27" width="0.127" layer="21"/>
<wire x1="10.16" y1="-1.27" x2="10.16" y2="1.27" width="0.127" layer="21"/>
<wire x1="10.16" y1="1.27" x2="-10.16" y2="1.27" width="0.127" layer="21"/>
<pad name="1" x="-7.62" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="2" x="-5.08" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="3" x="-2.54" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="4" x="0" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<text x="-10.16" y="2.54" size="1.27" layer="21">SPICEOBJECT</text>
<pad name="5" x="2.54" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="6" x="5.08" y="0" drill="0.8128" diameter="1.397" shape="square"/>
<pad name="7" x="7.62" y="0" drill="0.8128" diameter="1.397" shape="square"/>
</package>
</packages>
<symbols>
<symbol name="VSOURCE">
<circle x="0" y="1.27" radius="3.5921" width="0.254" layer="94"/>
<text x="-4.445" y="-1.905" size="1.778" layer="95" rot="R90">&gt;NAME</text>
<text x="6.35" y="-3.175" size="1.778" layer="96" rot="R90">&gt;VALUE</text>
<text x="-0.635" y="1.905" size="1.778" layer="94">+</text>
<text x="-0.635" y="-1.27" size="1.778" layer="94">-</text>
<pin name="1" x="0" y="10.16" visible="off" length="middle" direction="out" rot="R270"/>
<pin name="2" x="0" y="-7.62" visible="off" length="middle" direction="out" rot="R90"/>
</symbol>
<symbol name="VCVS">
<wire x1="-7.62" y1="5.08" x2="-2.54" y2="5.08" width="0.254" layer="94"/>
<wire x1="-2.54" y1="5.08" x2="-2.54" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-2.54" y1="-5.08" x2="-7.62" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-7.62" y1="-5.08" x2="-7.62" y2="5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="5.08" x2="0" y2="0" width="0.254" layer="94"/>
<wire x1="0" y1="0" x2="5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="-5.08" x2="10.16" y2="0" width="0.254" layer="94"/>
<wire x1="10.16" y1="0" x2="5.08" y2="5.08" width="0.254" layer="94"/>
<wire x1="-1.905" y1="0" x2="-1.27" y2="0" width="0.254" layer="94"/>
<wire x1="-0.635" y1="0" x2="0" y2="0" width="0.254" layer="94"/>
<text x="-5.715" y="2.54" size="1.778" layer="94">+</text>
<text x="4.445" y="1.27" size="1.778" layer="94">+</text>
<text x="-5.715" y="-3.81" size="1.778" layer="94">-</text>
<text x="4.445" y="-3.175" size="1.778" layer="94">-</text>
<text x="7.62" y="3.81" size="1.778" layer="94">&gt;NAME</text>
<text x="7.62" y="-5.715" size="1.778" layer="94">&gt;VALUE</text>
<pin name="P$1" x="5.08" y="7.62" visible="off" length="short" direction="out" rot="R270"/>
<pin name="P$2" x="5.08" y="-7.62" visible="off" length="short" direction="out" rot="R90"/>
<pin name="P$3" x="-5.08" y="7.62" visible="off" length="short" direction="in" rot="R270"/>
<pin name="P$4" x="-5.08" y="-7.62" visible="off" length="short" direction="in" rot="R90"/>
</symbol>
<symbol name="PORT">
<wire x1="1.016" y1="-0.254" x2="7.62" y2="-0.254" width="0.2032" layer="95"/>
<wire x1="7.62" y1="2.032" x2="1.016" y2="2.032" width="0.2032" layer="95"/>
<wire x1="1.016" y1="2.032" x2="1.016" y2="0" width="0.2032" layer="95"/>
<wire x1="1.016" y1="0" x2="1.016" y2="-0.254" width="0.2032" layer="95"/>
<wire x1="1.016" y1="0" x2="0" y2="0" width="0.1524" layer="95"/>
<text x="1.27" y="0.127" size="1.016" layer="96">&gt;VALUE</text>
<wire x1="7.62" y1="-0.254" x2="12.7" y2="-0.254" width="0.2032" layer="95"/>
<wire x1="14.351" y1="0.889" x2="12.7" y2="-0.254" width="0.2032" layer="95"/>
<wire x1="14.351" y1="0.889" x2="12.7" y2="2.032" width="0.2032" layer="95"/>
<wire x1="12.7" y1="2.032" x2="7.62" y2="2.032" width="0.2032" layer="95"/>
<circle x="14.351" y="0.889" radius="1.15003125" width="0.2032" layer="95"/>
<text x="15.875" y="0" size="1.778" layer="95">&gt;NAME</text>
</symbol>
<symbol name="ISOURCE">
<circle x="0" y="1.27" radius="3.5921" width="0.254" layer="94"/>
<text x="-4.445" y="-1.905" size="1.778" layer="95" rot="R90">&gt;NAME</text>
<text x="6.35" y="-3.175" size="1.778" layer="96" rot="R90">&gt;VALUE</text>
<pin name="1" x="0" y="10.16" visible="off" length="middle" direction="out" rot="R270"/>
<pin name="2" x="0" y="-7.62" visible="off" length="middle" direction="out" rot="R90"/>
<wire x1="0" y1="-1.27" x2="0" y2="2.032" width="0.254" layer="94"/>
<wire x1="0" y1="2.032" x2="-0.762" y2="2.032" width="0.254" layer="94"/>
<wire x1="0" y1="2.032" x2="0.762" y2="2.032" width="0.254" layer="94"/>
<wire x1="0.762" y1="2.032" x2="0" y2="3.302" width="0.254" layer="94"/>
<wire x1="0" y1="3.302" x2="-0.762" y2="2.032" width="0.254" layer="94"/>
</symbol>
<symbol name="DFF">
<wire x1="-7.62" y1="-7.62" x2="7.62" y2="-7.62" width="0.4064" layer="94"/>
<wire x1="7.62" y1="-7.62" x2="7.62" y2="10.16" width="0.4064" layer="94"/>
<wire x1="7.62" y1="10.16" x2="-7.62" y2="10.16" width="0.4064" layer="94"/>
<wire x1="-7.62" y1="10.16" x2="-7.62" y2="-7.62" width="0.4064" layer="94"/>
<text x="-7.62" y="10.795" size="1.778" layer="95">&gt;NAME</text>
<text x="-7.62" y="-10.16" size="1.778" layer="96">&gt;VALUE</text>
<pin name="Q#" x="12.7" y="7.62" length="middle" direction="out" rot="R180"/>
<pin name="!Q#" x="12.7" y="-5.08" length="middle" direction="out" rot="R180"/>
<pin name="#CLK" x="-12.7" y="0" length="middle" direction="in" function="clk"/>
<pin name="#R" x="-12.7" y="-5.08" length="middle" direction="in"/>
<pin name="#D" x="-12.7" y="2.54" length="middle" direction="in"/>
<pin name="#S" x="-12.7" y="7.62" length="middle" direction="in"/>
</symbol>
<symbol name="AD">
<pin name="DOUT" x="12.7" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="AIN" x="-7.62" y="0" visible="pad" length="middle" direction="in"/>
<text x="-2.54" y="5.08" size="1.778" layer="95">&gt;NAME</text>
<text x="-2.54" y="-7.62" size="1.778" layer="96">&gt;VALUE</text>
<wire x1="-2.54" y1="5.08" x2="-2.54" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-2.54" y1="-5.08" x2="7.62" y2="0" width="0.254" layer="94"/>
<wire x1="7.62" y1="0" x2="-2.54" y2="5.08" width="0.254" layer="94"/>
<text x="3.302" y="-0.762" size="1.778" layer="94">#</text>
</symbol>
<symbol name="PWR">
<pin name="VCC" x="0" y="7.62" visible="pad" length="middle" direction="pwr" rot="R270"/>
<pin name="GND" x="0" y="-7.62" visible="pad" length="middle" direction="pwr" rot="R90"/>
<text x="0.254" y="6.604" size="1.27" layer="94" rot="R270">VCC</text>
<text x="1.524" y="-6.096" size="1.27" layer="94" rot="R90">VSS</text>
</symbol>
<symbol name="DA">
<pin name="AOUT" x="12.7" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="DIN" x="-7.62" y="0" visible="pad" length="middle" direction="in"/>
<text x="-2.54" y="5.08" size="1.778" layer="95">&gt;NAME</text>
<text x="-2.54" y="-7.62" size="1.778" layer="96">&gt;VALUE</text>
<wire x1="-2.54" y1="5.08" x2="-2.54" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-2.54" y1="-5.08" x2="7.62" y2="0" width="0.254" layer="94"/>
<wire x1="7.62" y1="0" x2="-2.54" y2="5.08" width="0.254" layer="94"/>
<text x="-1.778" y="-0.762" size="1.778" layer="94">#</text>
</symbol>
<symbol name="D2R">
<pin name="ROUT" x="12.7" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="DIN" x="-7.62" y="0" visible="pad" length="middle" direction="in"/>
<text x="5.08" y="-5.08" size="1.778" layer="95">&gt;NAME</text>
<text x="-2.54" y="5.588" size="1.778" layer="96">&gt;VALUE</text>
<wire x1="-2.54" y1="5.08" x2="-2.54" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-2.54" y1="-5.08" x2="7.62" y2="0" width="0.254" layer="94"/>
<wire x1="7.62" y1="0" x2="-2.54" y2="5.08" width="0.254" layer="94"/>
<text x="-1.778" y="-0.762" size="1.778" layer="94">#     ~</text>
<pin name="ENABLE" x="2.54" y="-7.62" visible="pad" length="middle" direction="in" rot="R90"/>
</symbol>
<symbol name="Z">
<wire x1="-5.08" y1="0" x2="5.08" y2="0" width="0.4064" layer="94"/>
<wire x1="5.08" y1="0" x2="5.08" y2="7.62" width="0.4064" layer="94"/>
<wire x1="5.08" y1="7.62" x2="-5.08" y2="7.62" width="0.4064" layer="94"/>
<wire x1="-5.08" y1="7.62" x2="-5.08" y2="5.08" width="0.4064" layer="94"/>
<text x="2.54" y="-2.667" size="1.778" layer="95">&gt;NAME</text>
<text x="-5.334" y="8.382" size="1.778" layer="96">&gt;VALUE</text>
<pin name="OUT~" x="10.16" y="5.08" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="#CK" x="0" y="-5.08" visible="pad" length="middle" direction="in" function="clk" rot="R90"/>
<pin name="~IN" x="-10.16" y="5.08" visible="pad" length="middle" direction="in"/>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="0" width="0.4064" layer="94"/>
<wire x1="-5.08" y1="5.08" x2="-5.842" y2="5.842" width="0.254" layer="94"/>
<wire x1="-5.08" y1="5.08" x2="-5.842" y2="4.318" width="0.254" layer="94"/>
<text x="-4.572" y="4.318" size="1.6764" layer="94">~    z    ~</text>
<text x="0.508" y="5.334" size="1.016" layer="94">-1</text>
</symbol>
<symbol name="RGAIN">
<pin name="ROUT" x="10.16" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="RIN" x="-10.16" y="0" visible="pad" length="middle" direction="in"/>
<text x="-5.08" y="-7.62" size="1.778" layer="95">&gt;NAME</text>
<text x="-5.08" y="5.588" size="1.778" layer="96">&gt;VALUE</text>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="0" width="0.254" layer="94"/>
<text x="-4.318" y="-0.762" size="1.778" layer="94">~        ~</text>
<wire x1="-5.08" y1="0" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-5.08" y1="5.08" x2="5.08" y2="5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="5.08" x2="5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="-5.08" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="0.762" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="-0.762" width="0.254" layer="94"/>
</symbol>
<symbol name="R2V">
<pin name="VOUT" x="12.7" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="RIN" x="-7.62" y="0" visible="pad" length="middle" direction="in"/>
<text x="-2.54" y="-6.858" size="1.778" layer="95">&gt;NAME</text>
<text x="-2.54" y="5.588" size="1.778" layer="96">&gt;VALUE</text>
<wire x1="-2.54" y1="5.08" x2="-2.54" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-2.54" y1="-5.08" x2="7.62" y2="0" width="0.254" layer="94"/>
<wire x1="7.62" y1="0" x2="-2.54" y2="5.08" width="0.254" layer="94"/>
<text x="-1.778" y="-0.762" size="1.778" layer="94">~</text>
</symbol>
<symbol name="XPORT">
<wire x1="1.016" y1="-0.254" x2="12.7" y2="-0.254" width="0.2032" layer="95"/>
<wire x1="12.7" y1="2.032" x2="1.016" y2="2.032" width="0.2032" layer="95"/>
<wire x1="1.016" y1="2.032" x2="1.016" y2="0" width="0.2032" layer="95"/>
<wire x1="1.016" y1="0" x2="1.016" y2="-0.254" width="0.2032" layer="95"/>
<wire x1="1.016" y1="0" x2="0" y2="0" width="0.1524" layer="95"/>
<text x="1.27" y="0.127" size="1.016" layer="96">&gt;VALUE</text>
<wire x1="11.811" y1="0.889" x2="12.7" y2="-0.254" width="0.2032" layer="95"/>
<wire x1="11.811" y1="0.889" x2="12.7" y2="2.032" width="0.2032" layer="95"/>
<circle x="14.351" y="0.889" radius="1.15003125" width="0.2032" layer="95"/>
<text x="15.875" y="0" size="1.778" layer="95">&gt;NAME</text>
</symbol>
<symbol name="OSC">
<wire x1="-10.16" y1="-5.08" x2="10.16" y2="-5.08" width="0.4064" layer="94"/>
<wire x1="10.16" y1="-5.08" x2="10.16" y2="5.08" width="0.4064" layer="94"/>
<wire x1="10.16" y1="5.08" x2="-10.16" y2="5.08" width="0.4064" layer="94"/>
<wire x1="-10.16" y1="5.08" x2="-10.16" y2="-5.08" width="0.4064" layer="94"/>
<text x="-10.16" y="5.715" size="1.778" layer="95">&gt;NAME</text>
<text x="-10.16" y="-7.62" size="1.778" layer="96">&gt;VALUE</text>
<pin name="CLK#" x="15.24" y="0" length="middle" direction="out" rot="R180"/>
<pin name="VCNTL" x="-15.24" y="0" length="middle" direction="in"/>
</symbol>
<symbol name="BUF">
<wire x1="-5.08" y1="-5.08" x2="5.08" y2="0" width="0.4064" layer="94"/>
<wire x1="5.08" y1="0" x2="-5.08" y2="5.08" width="0.4064" layer="94"/>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="-5.08" width="0.4064" layer="94"/>
<text x="2.54" y="3.175" size="1.778" layer="95">&gt;NAME</text>
<text x="2.54" y="-5.08" size="1.778" layer="96">&gt;VALUE</text>
<pin name="O" x="10.16" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="I" x="-10.16" y="0" visible="pad" length="middle" direction="in"/>
<text x="-1.778" y="-0.762" size="1.778" layer="94">#</text>
</symbol>
<symbol name="INV">
<wire x1="-5.08" y1="-5.08" x2="5.08" y2="0" width="0.4064" layer="94"/>
<wire x1="5.08" y1="0" x2="-5.08" y2="5.08" width="0.4064" layer="94"/>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="-5.08" width="0.4064" layer="94"/>
<text x="2.54" y="3.175" size="1.778" layer="95">&gt;NAME</text>
<text x="2.54" y="-5.08" size="1.778" layer="96">&gt;VALUE</text>
<pin name="O" x="10.16" y="0" visible="pad" length="middle" direction="out" function="dot" rot="R180"/>
<pin name="I" x="-10.16" y="0" visible="pad" length="middle" direction="in"/>
<text x="-2.032" y="-0.762" size="1.778" layer="94">#</text>
</symbol>
<symbol name="XNOR">
<wire x1="-5.08" y1="2.54" x2="-3.81" y2="2.54" width="0.1524" layer="94"/>
<wire x1="-5.08" y1="-2.54" x2="-3.81" y2="-2.54" width="0.1524" layer="94"/>
<wire x1="-3.7846" y1="-5.0678" x2="5.0039" y2="0.0507" width="0.4064" layer="94" curve="60.147106" cap="flat"/>
<wire x1="-3.7846" y1="5.0678" x2="5.0042" y2="-0.0505" width="0.4064" layer="94" curve="-60.148802" cap="flat"/>
<wire x1="-3.81" y1="5.08" x2="-3.81" y2="-5.08" width="0.4064" layer="94" curve="-77.319617"/>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="-5.08" width="0.4064" layer="94" curve="-77.319617" cap="flat"/>
<text x="-5.08" y="-7.62" size="1.778" layer="96">&gt;VALUE</text>
<text x="-5.08" y="5.715" size="1.778" layer="95">&gt;NAME</text>
<pin name="I0" x="-10.16" y="2.54" visible="pad" length="middle" direction="in"/>
<pin name="I1" x="-10.16" y="-2.54" visible="pad" length="middle" direction="in"/>
<pin name="O" x="10.16" y="0" visible="pad" length="middle" direction="out" function="dot" rot="R180"/>
<text x="-0.508" y="-0.762" size="1.778" layer="94">#</text>
</symbol>
<symbol name="AND">
<wire x1="0" y1="-5.08" x2="5.08" y2="0" width="0.4064" layer="94" curve="90" cap="flat"/>
<wire x1="0" y1="5.08" x2="5.08" y2="0" width="0.4064" layer="94" curve="-90" cap="flat"/>
<wire x1="0" y1="5.08" x2="-2.54" y2="5.08" width="0.4064" layer="94"/>
<wire x1="-2.54" y1="5.08" x2="-2.54" y2="-5.08" width="0.4064" layer="94"/>
<wire x1="-2.54" y1="-5.08" x2="0" y2="-5.08" width="0.4064" layer="94"/>
<text x="-2.54" y="-7.62" size="1.778" layer="96">&gt;VALUE</text>
<text x="-2.54" y="5.715" size="1.778" layer="95">&gt;NAME</text>
<pin name="I0" x="-7.62" y="2.54" visible="pad" length="middle" direction="in"/>
<pin name="I1" x="-7.62" y="-2.54" visible="pad" length="middle" direction="in"/>
<pin name="O" x="10.16" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<text x="0.508" y="-0.762" size="1.778" layer="94">#</text>
</symbol>
<symbol name="NOR">
<wire x1="-3.81" y1="5.08" x2="-5.08" y2="5.08" width="0.4064" layer="94"/>
<wire x1="-3.81" y1="-5.08" x2="-5.08" y2="-5.08" width="0.4064" layer="94"/>
<wire x1="-5.08" y1="2.54" x2="-3.556" y2="2.54" width="0.1524" layer="94"/>
<wire x1="-5.08" y1="-2.54" x2="-3.556" y2="-2.54" width="0.1524" layer="94"/>
<wire x1="-3.7846" y1="-5.0678" x2="5.0039" y2="0.0507" width="0.4064" layer="94" curve="60.147106" cap="flat"/>
<wire x1="-3.7846" y1="5.0678" x2="5.0042" y2="-0.0505" width="0.4064" layer="94" curve="-60.148802" cap="flat"/>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="-5.08" width="0.4064" layer="94" curve="-90"/>
<text x="-5.08" y="5.715" size="1.778" layer="95">&gt;NAME</text>
<text x="-5.08" y="-7.62" size="1.778" layer="96">&gt;VALUE</text>
<pin name="I0" x="-10.16" y="2.54" visible="pad" length="middle" direction="in"/>
<pin name="I1" x="-10.16" y="-2.54" visible="pad" length="middle" direction="in"/>
<pin name="O" x="10.16" y="0" visible="pad" length="middle" direction="out" function="dot" rot="R180"/>
<text x="-0.508" y="-0.762" size="1.778" layer="94">#</text>
</symbol>
<symbol name="NAND">
<wire x1="0" y1="-5.08" x2="5.08" y2="0" width="0.4064" layer="94" curve="90" cap="flat"/>
<wire x1="0" y1="5.08" x2="5.08" y2="0" width="0.4064" layer="94" curve="-90" cap="flat"/>
<wire x1="0" y1="5.08" x2="-2.54" y2="5.08" width="0.4064" layer="94"/>
<wire x1="-2.54" y1="5.08" x2="-2.54" y2="-5.08" width="0.4064" layer="94"/>
<wire x1="-2.54" y1="-5.08" x2="0" y2="-5.08" width="0.4064" layer="94"/>
<text x="-2.54" y="5.715" size="1.778" layer="95">&gt;NAME</text>
<text x="-2.54" y="-7.62" size="1.778" layer="96">&gt;VALUE</text>
<pin name="I0" x="-7.62" y="2.54" visible="pad" length="middle" direction="in"/>
<pin name="I1" x="-7.62" y="-2.54" visible="pad" length="middle" direction="in"/>
<pin name="O" x="10.16" y="0" visible="pad" length="middle" direction="out" function="dot" rot="R180"/>
<text x="0.508" y="-0.762" size="1.778" layer="94">#</text>
</symbol>
<symbol name="OR">
<wire x1="-3.81" y1="5.08" x2="-5.08" y2="5.08" width="0.4064" layer="94"/>
<wire x1="-3.81" y1="-5.08" x2="-5.08" y2="-5.08" width="0.4064" layer="94"/>
<wire x1="-5.08" y1="2.54" x2="-3.556" y2="2.54" width="0.1524" layer="94"/>
<wire x1="-5.08" y1="-2.54" x2="-3.556" y2="-2.54" width="0.1524" layer="94"/>
<wire x1="-3.7846" y1="-5.0678" x2="5.0039" y2="0.0507" width="0.4064" layer="94" curve="60.147106" cap="flat"/>
<wire x1="-3.7846" y1="5.0678" x2="5.0042" y2="-0.0505" width="0.4064" layer="94" curve="-60.148802" cap="flat"/>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="-5.08" width="0.4064" layer="94" curve="-90"/>
<text x="-5.08" y="5.715" size="1.778" layer="95">&gt;NAME</text>
<text x="-5.08" y="-7.62" size="1.778" layer="96">&gt;VALUE</text>
<pin name="I0" x="-10.16" y="2.54" visible="pad" length="middle" direction="in"/>
<pin name="I1" x="-10.16" y="-2.54" visible="pad" length="middle" direction="in"/>
<pin name="O" x="10.16" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<text x="-0.508" y="-0.762" size="1.778" layer="94">#</text>
</symbol>
<symbol name="XOR">
<wire x1="-5.08" y1="2.54" x2="-3.81" y2="2.54" width="0.1524" layer="94"/>
<wire x1="-5.08" y1="-2.54" x2="-3.81" y2="-2.54" width="0.1524" layer="94"/>
<wire x1="-3.7846" y1="-5.0678" x2="5.0039" y2="0.0507" width="0.4064" layer="94" curve="60.147106" cap="flat"/>
<wire x1="-3.7846" y1="5.0678" x2="5.0042" y2="-0.0505" width="0.4064" layer="94" curve="-60.148802" cap="flat"/>
<wire x1="-3.81" y1="5.08" x2="-3.81" y2="-5.08" width="0.4064" layer="94" curve="-77.319617"/>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="-5.08" width="0.4064" layer="94" curve="-77.319617" cap="flat"/>
<text x="-5.08" y="-7.62" size="1.778" layer="96">&gt;VALUE</text>
<text x="-5.08" y="5.715" size="1.778" layer="95">&gt;NAME</text>
<pin name="I0" x="-10.16" y="2.54" visible="pad" length="middle" direction="in"/>
<pin name="I1" x="-10.16" y="-2.54" visible="pad" length="middle" direction="in"/>
<pin name="O" x="10.16" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<text x="-0.508" y="-0.762" size="1.778" layer="94">#</text>
</symbol>
<symbol name="TRISTATE">
<wire x1="-5.08" y1="-5.08" x2="5.08" y2="0" width="0.4064" layer="94"/>
<wire x1="5.08" y1="0" x2="-5.08" y2="5.08" width="0.4064" layer="94"/>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="-5.08" width="0.4064" layer="94"/>
<text x="2.54" y="3.175" size="1.778" layer="95">&gt;NAME</text>
<text x="2.54" y="-5.08" size="1.778" layer="96">&gt;VALUE</text>
<pin name="O" x="10.16" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="I" x="-10.16" y="0" visible="pad" length="middle" direction="in"/>
<text x="-1.778" y="-0.762" size="1.778" layer="94">#</text>
<pin name="EN" x="0" y="-7.62" visible="pad" length="middle" direction="in" rot="R90"/>
</symbol>
<symbol name="PULLUP">
<wire x1="0.889" y1="-2.54" x2="0.889" y2="2.54" width="0.254" layer="94"/>
<wire x1="-0.889" y1="2.54" x2="-0.889" y2="-2.54" width="0.254" layer="94"/>
<wire x1="0.889" y1="2.54" x2="0" y2="2.54" width="0.254" layer="94"/>
<wire x1="0" y1="2.54" x2="-0.889" y2="2.54" width="0.254" layer="94"/>
<wire x1="0.889" y1="-2.54" x2="-0.889" y2="-2.54" width="0.254" layer="94"/>
<text x="-1.4986" y="-3.81" size="1.778" layer="95" rot="R90">&gt;NAME</text>
<text x="3.302" y="-3.81" size="1.778" layer="96" rot="R90">&gt;VALUE</text>
<pin name="1" x="0" y="-5.08" visible="off" length="short" direction="pas" swaplevel="1" rot="R90"/>
<wire x1="0" y1="2.54" x2="0" y2="7.62" width="0.254" layer="94"/>
<wire x1="0" y1="7.62" x2="1.27" y2="6.35" width="0.254" layer="94"/>
<wire x1="0" y1="7.62" x2="-1.27" y2="6.35" width="0.254" layer="94"/>
<text x="0.762" y="-0.508" size="1.27" layer="94" rot="R90">#</text>
</symbol>
<symbol name="PULLDOWN">
<wire x1="-0.889" y1="2.54" x2="-0.889" y2="-2.54" width="0.254" layer="94"/>
<wire x1="0.889" y1="-2.54" x2="0.889" y2="2.54" width="0.254" layer="94"/>
<wire x1="-0.889" y1="-2.54" x2="0" y2="-2.54" width="0.254" layer="94"/>
<wire x1="0" y1="-2.54" x2="0.889" y2="-2.54" width="0.254" layer="94"/>
<wire x1="-0.889" y1="2.54" x2="0.889" y2="2.54" width="0.254" layer="94"/>
<text x="1.4986" y="3.81" size="1.778" layer="95" rot="R270">&gt;NAME</text>
<text x="-3.302" y="3.81" size="1.778" layer="96" rot="R270">&gt;VALUE</text>
<pin name="1" x="0" y="5.08" visible="off" length="short" direction="pas" swaplevel="1" rot="R270"/>
<wire x1="0" y1="-2.54" x2="0" y2="-7.62" width="0.254" layer="94"/>
<wire x1="0" y1="-7.62" x2="-1.27" y2="-7.62" width="0.254" layer="94"/>
<wire x1="0" y1="-7.62" x2="1.27" y2="-7.62" width="0.254" layer="94"/>
<text x="0.762" y="-0.508" size="1.27" layer="94" rot="R90">#</text>
</symbol>
<symbol name="JKFF">
<wire x1="-7.62" y1="-10.16" x2="7.62" y2="-10.16" width="0.4064" layer="94"/>
<wire x1="7.62" y1="-10.16" x2="7.62" y2="10.16" width="0.4064" layer="94"/>
<wire x1="7.62" y1="10.16" x2="-7.62" y2="10.16" width="0.4064" layer="94"/>
<wire x1="-7.62" y1="10.16" x2="-7.62" y2="-10.16" width="0.4064" layer="94"/>
<text x="-7.62" y="10.795" size="1.778" layer="95">&gt;NAME</text>
<text x="-7.62" y="-12.7" size="1.778" layer="96">&gt;VALUE</text>
<pin name="Q#" x="12.7" y="7.62" length="middle" direction="out" rot="R180"/>
<pin name="!Q#" x="12.7" y="-7.62" length="middle" direction="out" rot="R180"/>
<pin name="#CLK" x="-12.7" y="0" length="middle" direction="in" function="clk"/>
<pin name="#R" x="-12.7" y="-7.62" length="middle" direction="in"/>
<pin name="#J" x="-12.7" y="2.54" length="middle" direction="in"/>
<pin name="#S" x="-12.7" y="7.62" length="middle" direction="in"/>
<pin name="#K" x="-12.7" y="-2.54" length="middle" direction="in"/>
</symbol>
<symbol name="TFF">
<wire x1="-7.62" y1="-7.62" x2="7.62" y2="-7.62" width="0.4064" layer="94"/>
<wire x1="7.62" y1="-7.62" x2="7.62" y2="10.16" width="0.4064" layer="94"/>
<wire x1="7.62" y1="10.16" x2="-7.62" y2="10.16" width="0.4064" layer="94"/>
<wire x1="-7.62" y1="10.16" x2="-7.62" y2="-7.62" width="0.4064" layer="94"/>
<text x="-7.62" y="10.795" size="1.778" layer="95">&gt;NAME</text>
<text x="-7.62" y="-10.16" size="1.778" layer="96">&gt;VALUE</text>
<pin name="Q#" x="12.7" y="7.62" length="middle" direction="out" rot="R180"/>
<pin name="!Q#" x="12.7" y="-5.08" length="middle" direction="out" rot="R180"/>
<pin name="#CLK" x="-12.7" y="0" length="middle" direction="in" function="clk"/>
<pin name="#R" x="-12.7" y="-5.08" length="middle" direction="in"/>
<pin name="#T" x="-12.7" y="2.54" length="middle" direction="in"/>
<pin name="#S" x="-12.7" y="7.62" length="middle" direction="in"/>
</symbol>
<symbol name="DLATCH">
<wire x1="-7.62" y1="-7.62" x2="7.62" y2="-7.62" width="0.4064" layer="94"/>
<wire x1="7.62" y1="-7.62" x2="7.62" y2="10.16" width="0.4064" layer="94"/>
<wire x1="7.62" y1="10.16" x2="-7.62" y2="10.16" width="0.4064" layer="94"/>
<wire x1="-7.62" y1="10.16" x2="-7.62" y2="-7.62" width="0.4064" layer="94"/>
<text x="-7.62" y="10.795" size="1.778" layer="95">&gt;NAME</text>
<text x="-7.62" y="-10.16" size="1.778" layer="96">&gt;VALUE</text>
<pin name="Q#" x="12.7" y="7.62" length="middle" direction="out" rot="R180"/>
<pin name="!Q#" x="12.7" y="-5.08" length="middle" direction="out" rot="R180"/>
<pin name="#EN" x="-12.7" y="0" length="middle" direction="in"/>
<pin name="#R" x="-12.7" y="-5.08" length="middle" direction="in"/>
<pin name="#D" x="-12.7" y="2.54" length="middle" direction="in"/>
<pin name="#S" x="-12.7" y="7.62" length="middle" direction="in"/>
</symbol>
<symbol name="SRLATCH">
<wire x1="-7.62" y1="-10.16" x2="7.62" y2="-10.16" width="0.4064" layer="94"/>
<wire x1="7.62" y1="-10.16" x2="7.62" y2="10.16" width="0.4064" layer="94"/>
<wire x1="7.62" y1="10.16" x2="-7.62" y2="10.16" width="0.4064" layer="94"/>
<wire x1="-7.62" y1="10.16" x2="-7.62" y2="-10.16" width="0.4064" layer="94"/>
<text x="-7.62" y="10.795" size="1.778" layer="95">&gt;NAME</text>
<text x="-7.62" y="-12.7" size="1.778" layer="96">&gt;VALUE</text>
<pin name="Q#" x="12.7" y="7.62" length="middle" direction="out" rot="R180"/>
<pin name="!Q#" x="12.7" y="-7.62" length="middle" direction="out" rot="R180"/>
<pin name="#EN" x="-12.7" y="0" length="middle" direction="in"/>
<pin name="#AR" x="-12.7" y="-7.62" length="middle" direction="in"/>
<pin name="#S" x="-12.7" y="2.54" length="middle" direction="in"/>
<pin name="#AS" x="-12.7" y="7.62" length="middle" direction="in"/>
<pin name="#R" x="-12.7" y="-2.54" length="middle" direction="in"/>
</symbol>
<symbol name="FDIV">
<wire x1="-10.16" y1="-5.08" x2="10.16" y2="-5.08" width="0.4064" layer="94"/>
<wire x1="10.16" y1="-5.08" x2="10.16" y2="5.08" width="0.4064" layer="94"/>
<wire x1="10.16" y1="5.08" x2="-10.16" y2="5.08" width="0.4064" layer="94"/>
<wire x1="-10.16" y1="5.08" x2="-10.16" y2="-5.08" width="0.4064" layer="94"/>
<text x="-10.16" y="5.715" size="1.778" layer="95">&gt;NAME</text>
<text x="-10.16" y="-7.62" size="1.778" layer="96">&gt;VALUE</text>
<pin name="FOUT#" x="15.24" y="0" length="middle" direction="out" rot="R180"/>
<pin name="#FIN" x="-15.24" y="0" length="middle" direction="in"/>
</symbol>
<symbol name="GAIN">
<pin name="AOUT" x="10.16" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="AIN" x="-10.16" y="0" visible="pad" length="middle" direction="in"/>
<text x="-5.08" y="-7.62" size="1.778" layer="95">&gt;NAME</text>
<text x="-5.08" y="5.588" size="1.778" layer="96">&gt;VALUE</text>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="0" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-5.08" y1="5.08" x2="5.08" y2="5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="5.08" x2="5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="-5.08" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="0.762" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="-0.762" width="0.254" layer="94"/>
</symbol>
<symbol name="SUM">
<pin name="AOUT" x="7.62" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="AIN1" x="-7.62" y="0" visible="pad" length="middle" direction="in"/>
<text x="-2.54" y="3.302" size="1.778" layer="95">&gt;NAME</text>
<text x="2.54" y="-4.572" size="1.778" layer="96">&gt;VALUE</text>
<circle x="0" y="0" radius="2.54" width="0.254" layer="94"/>
<pin name="AIN2" x="0" y="-7.62" visible="pad" length="middle" direction="in" rot="R90"/>
<wire x1="0" y1="1.016" x2="0" y2="0" width="0.254" layer="94"/>
<wire x1="0" y1="0" x2="0" y2="-1.016" width="0.254" layer="94"/>
<wire x1="0" y1="0" x2="-1.016" y2="0" width="0.254" layer="94"/>
<wire x1="0" y1="0" x2="1.016" y2="0" width="0.254" layer="94"/>
<wire x1="0.762" y1="-3.302" x2="0" y2="-2.54" width="0.254" layer="94"/>
<wire x1="0" y1="-2.54" x2="-0.762" y2="-3.302" width="0.254" layer="94"/>
<wire x1="-2.54" y1="0" x2="-3.302" y2="0.762" width="0.254" layer="94"/>
<wire x1="-2.54" y1="0" x2="-3.302" y2="-0.762" width="0.254" layer="94"/>
</symbol>
<symbol name="MUL">
<pin name="AOUT" x="7.62" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="AIN1" x="-7.62" y="0" visible="pad" length="middle" direction="in"/>
<text x="-2.54" y="3.302" size="1.778" layer="95">&gt;NAME</text>
<text x="2.54" y="-4.572" size="1.778" layer="96">&gt;VALUE</text>
<circle x="0" y="0" radius="2.54" width="0.254" layer="94"/>
<pin name="AIN2" x="0" y="-7.62" visible="pad" length="middle" direction="in" rot="R90"/>
<circle x="0" y="0" radius="0.254" width="0.4064" layer="94"/>
<wire x1="0" y1="-2.54" x2="0.762" y2="-3.302" width="0.254" layer="94"/>
<wire x1="0" y1="-2.54" x2="-0.762" y2="-3.302" width="0.254" layer="94"/>
<wire x1="-2.54" y1="0" x2="-3.302" y2="0.762" width="0.254" layer="94"/>
<wire x1="-2.54" y1="0" x2="-3.302" y2="-0.762" width="0.254" layer="94"/>
</symbol>
<symbol name="DIV">
<pin name="AOUT" x="7.62" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="AIN" x="-7.62" y="0" visible="pad" length="middle" direction="in"/>
<text x="-2.54" y="3.302" size="1.778" layer="95">&gt;NAME</text>
<text x="2.54" y="-4.572" size="1.778" layer="96">&gt;VALUE</text>
<pin name="BIN" x="0" y="-7.62" visible="pad" length="middle" direction="in" rot="R90"/>
<wire x1="-2.54" y1="2.54" x2="-2.54" y2="0" width="0.254" layer="94"/>
<wire x1="-2.54" y1="0" x2="-2.54" y2="-2.54" width="0.254" layer="94"/>
<wire x1="-2.54" y1="-2.54" x2="0" y2="-2.54" width="0.254" layer="94"/>
<wire x1="0" y1="-2.54" x2="2.54" y2="-2.54" width="0.254" layer="94"/>
<wire x1="2.54" y1="-2.54" x2="2.54" y2="2.54" width="0.254" layer="94"/>
<wire x1="2.54" y1="2.54" x2="-2.54" y2="2.54" width="0.254" layer="94"/>
<text x="-0.762" y="-1.778" size="1.4224" layer="94">A
B</text>
<wire x1="1.524" y1="0" x2="-1.524" y2="0" width="0.254" layer="94"/>
<wire x1="-2.54" y1="0" x2="-3.302" y2="0.762" width="0.254" layer="94"/>
<wire x1="-2.54" y1="0" x2="-3.302" y2="-0.762" width="0.254" layer="94"/>
<wire x1="0" y1="-2.54" x2="0.762" y2="-3.302" width="0.254" layer="94"/>
<wire x1="0" y1="-2.54" x2="-0.762" y2="-3.302" width="0.254" layer="94"/>
</symbol>
<symbol name="LIMITER">
<pin name="AOUT" x="10.16" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="AIN" x="-10.16" y="0" visible="pad" length="middle" direction="in"/>
<text x="-5.08" y="-7.62" size="1.778" layer="95">&gt;NAME</text>
<text x="-5.08" y="5.588" size="1.778" layer="96">&gt;VALUE</text>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="0" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-5.08" y1="5.08" x2="5.08" y2="5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="5.08" x2="5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="-5.08" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-3.81" y1="-3.81" x2="-2.54" y2="-3.81" width="0.254" layer="94"/>
<wire x1="-2.54" y1="-3.81" x2="2.54" y2="3.556" width="0.254" layer="94"/>
<wire x1="2.54" y1="3.556" x2="3.81" y2="3.556" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="0.762" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="-0.762" width="0.254" layer="94"/>
</symbol>
<symbol name="CLIMITER">
<pin name="AOUT" x="10.16" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="AIN" x="-10.16" y="0" visible="pad" length="middle" direction="in"/>
<text x="-5.08" y="-7.62" size="1.778" layer="95">&gt;NAME</text>
<text x="-5.08" y="5.588" size="1.778" layer="96">&gt;VALUE</text>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="2.54" width="0.254" layer="94"/>
<wire x1="-5.08" y1="2.54" x2="-5.08" y2="0" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.08" y2="-2.54" width="0.254" layer="94"/>
<wire x1="-5.08" y1="-2.54" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-5.08" y1="5.08" x2="5.08" y2="5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="5.08" x2="5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="-5.08" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-3.81" y1="-2.54" x2="-2.54" y2="-2.54" width="0.254" layer="94"/>
<wire x1="-2.54" y1="-2.54" x2="2.54" y2="2.54" width="0.254" layer="94"/>
<wire x1="2.54" y1="2.54" x2="3.81" y2="2.54" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="0.762" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="-0.762" width="0.254" layer="94"/>
<pin name="AUPPER" x="-10.16" y="2.54" visible="pad" length="middle" direction="in"/>
<pin name="ALOWER" x="-10.16" y="-2.54" visible="pad" length="middle" direction="in"/>
<wire x1="-5.08" y1="2.54" x2="2.54" y2="2.54" width="0.254" layer="97" style="shortdash"/>
<wire x1="-5.08" y1="-2.54" x2="-2.54" y2="-2.54" width="0.254" layer="97" style="shortdash"/>
</symbol>
<symbol name="ASWITCH">
<wire x1="-2.54" y1="-0.889" x2="2.54" y2="-0.889" width="0.254" layer="94"/>
<wire x1="2.54" y1="0.889" x2="-2.54" y2="0.889" width="0.254" layer="94"/>
<wire x1="2.54" y1="-0.889" x2="2.54" y2="0.889" width="0.254" layer="94"/>
<wire x1="-2.54" y1="-0.889" x2="-2.54" y2="0.889" width="0.254" layer="94"/>
<text x="-2.54" y="3.0226" size="1.778" layer="95">&gt;NAME</text>
<text x="-1.016" y="-3.81" size="1.778" layer="96">&gt;VALUE</text>
<pin name="R1" x="-5.08" y="0" visible="off" length="short" direction="pas" swaplevel="1"/>
<pin name="R2" x="5.08" y="0" visible="off" length="short" direction="pas" swaplevel="1" rot="R180"/>
<pin name="CNTL" x="-2.54" y="-5.08" visible="off" length="short" direction="pas" swaplevel="1" rot="R90"/>
<wire x1="-2.54" y1="-2.54" x2="2.286" y2="2.286" width="0.254" layer="94"/>
<wire x1="2.032" y1="2.54" x2="2.286" y2="2.286" width="0.254" layer="94"/>
<wire x1="2.286" y1="2.286" x2="2.54" y2="2.032" width="0.254" layer="94"/>
</symbol>
<symbol name="ZD">
<wire x1="-1.27" y1="-1.27" x2="1.27" y2="0" width="0.254" layer="94"/>
<wire x1="1.27" y1="0" x2="-1.27" y2="1.27" width="0.254" layer="94"/>
<wire x1="1.27" y1="1.27" x2="1.27" y2="0" width="0.254" layer="94"/>
<wire x1="-1.27" y1="1.27" x2="-1.27" y2="-1.27" width="0.254" layer="94"/>
<wire x1="1.27" y1="0" x2="1.27" y2="-1.27" width="0.254" layer="94"/>
<wire x1="1.27" y1="-1.27" x2="0.635" y2="-1.27" width="0.254" layer="94"/>
<text x="-1.778" y="1.905" size="1.778" layer="95">&gt;NAME</text>
<text x="-1.778" y="-3.429" size="1.778" layer="96">&gt;VALUE</text>
<pin name="A" x="-2.54" y="0" visible="off" length="short" direction="pas"/>
<pin name="C" x="2.54" y="0" visible="off" length="short" direction="pas" rot="R180"/>
</symbol>
<symbol name="DIFF">
<pin name="AOUT" x="10.16" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="AIN" x="-10.16" y="0" visible="pad" length="middle" direction="in"/>
<text x="-5.08" y="-7.62" size="1.778" layer="95">&gt;NAME</text>
<text x="-5.08" y="5.588" size="1.778" layer="96">&gt;VALUE</text>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="0" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-5.08" y1="5.08" x2="5.08" y2="5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="5.08" x2="5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="-5.08" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="0.762" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="-0.762" width="0.254" layer="94"/>
<text x="-0.508" y="-0.508" size="1.778" layer="94">s</text>
</symbol>
<symbol name="INTEG">
<pin name="AOUT" x="10.16" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="AIN" x="-10.16" y="0" visible="pad" length="middle" direction="in"/>
<text x="-5.08" y="-7.62" size="1.778" layer="95">&gt;NAME</text>
<text x="-5.08" y="5.588" size="1.778" layer="96">&gt;VALUE</text>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="0" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-5.08" y1="5.08" x2="5.08" y2="5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="5.08" x2="5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="-5.08" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="0.762" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="-0.762" width="0.254" layer="94"/>
<text x="-0.762" y="-2.032" size="1.778" layer="94">1
s</text>
<wire x1="-1.524" y1="0" x2="1.524" y2="0" width="0.254" layer="94"/>
</symbol>
<symbol name="XFER">
<pin name="AOUT" x="17.78" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="AIN" x="-17.78" y="0" visible="pad" length="middle" direction="in"/>
<text x="-12.7" y="-7.62" size="1.778" layer="95">&gt;NAME</text>
<text x="-12.7" y="5.588" size="1.778" layer="96">&gt;VALUE</text>
<wire x1="-12.7" y1="5.08" x2="-12.7" y2="0" width="0.254" layer="94"/>
<wire x1="-12.7" y1="0" x2="-12.7" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-12.7" y1="5.08" x2="12.7" y2="5.08" width="0.254" layer="94"/>
<wire x1="12.7" y1="5.08" x2="12.7" y2="-5.08" width="0.254" layer="94"/>
<wire x1="12.7" y1="-5.08" x2="-12.7" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-12.7" y1="0" x2="-13.462" y2="0.762" width="0.254" layer="94"/>
<wire x1="-12.7" y1="0" x2="-13.462" y2="-0.762" width="0.254" layer="94"/>
</symbol>
<symbol name="SLEW">
<pin name="AOUT" x="10.16" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="AIN" x="-10.16" y="0" visible="pad" length="middle" direction="in"/>
<text x="-5.08" y="-7.62" size="1.778" layer="95">&gt;NAME</text>
<text x="-5.08" y="5.588" size="1.778" layer="96">&gt;VALUE</text>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="0" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-5.08" y1="5.08" x2="5.08" y2="5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="5.08" x2="5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="-5.08" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-3.81" y1="-3.81" x2="-2.54" y2="-3.81" width="0.254" layer="94"/>
<wire x1="-2.54" y1="-3.81" x2="2.54" y2="3.556" width="0.254" layer="94"/>
<wire x1="2.54" y1="3.556" x2="2.794" y2="3.556" width="0.254" layer="94"/>
<wire x1="2.794" y1="3.556" x2="3.81" y2="3.556" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="0.762" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="-0.762" width="0.254" layer="94"/>
<wire x1="-2.54" y1="-3.81" x2="-2.54" y2="3.556" width="0.254" layer="94"/>
<wire x1="-2.54" y1="3.556" x2="2.54" y2="3.556" width="0.254" layer="94"/>
</symbol>
<symbol name="HYST">
<pin name="AOUT" x="10.16" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="AIN" x="-10.16" y="0" visible="pad" length="middle" direction="in"/>
<text x="-5.08" y="-7.62" size="1.778" layer="95">&gt;NAME</text>
<text x="-5.08" y="5.588" size="1.778" layer="96">&gt;VALUE</text>
<wire x1="-5.08" y1="5.08" x2="-5.08" y2="0" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-5.08" y1="5.08" x2="5.08" y2="5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="5.08" x2="5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="5.08" y1="-5.08" x2="-5.08" y2="-5.08" width="0.254" layer="94"/>
<wire x1="-3.81" y1="-2.54" x2="-2.54" y2="-2.54" width="0.254" layer="94"/>
<wire x1="-2.54" y1="-2.54" x2="0.762" y2="2.54" width="0.254" layer="94"/>
<wire x1="0.762" y1="2.54" x2="2.794" y2="2.54" width="0.254" layer="94"/>
<wire x1="2.794" y1="2.54" x2="3.81" y2="2.54" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="0.762" width="0.254" layer="94"/>
<wire x1="-5.08" y1="0" x2="-5.842" y2="-0.762" width="0.254" layer="94"/>
<wire x1="-2.54" y1="-2.54" x2="-0.762" y2="-2.54" width="0.254" layer="94"/>
<wire x1="-0.762" y1="-2.54" x2="2.794" y2="2.54" width="0.254" layer="94"/>
</symbol>
<symbol name="SUM3">
<pin name="AOUT" x="7.62" y="0" visible="pad" length="middle" direction="out" rot="R180"/>
<pin name="AIN1" x="-7.62" y="0" visible="pad" length="middle" direction="in"/>
<text x="2.54" y="3.302" size="1.778" layer="95">&gt;NAME</text>
<text x="2.54" y="-4.572" size="1.778" layer="96">&gt;VALUE</text>
<circle x="0" y="0" radius="2.54" width="0.254" layer="94"/>
<pin name="AIN2" x="0" y="-7.62" visible="pad" length="middle" direction="in" rot="R90"/>
<wire x1="0" y1="1.016" x2="0" y2="0" width="0.254" layer="94"/>
<wire x1="0" y1="0" x2="0" y2="-1.016" width="0.254" layer="94"/>
<wire x1="0" y1="0" x2="-1.016" y2="0" width="0.254" layer="94"/>
<wire x1="0" y1="0" x2="1.016" y2="0" width="0.254" layer="94"/>
<wire x1="0.762" y1="-3.302" x2="0" y2="-2.54" width="0.254" layer="94"/>
<wire x1="0" y1="-2.54" x2="-0.762" y2="-3.302" width="0.254" layer="94"/>
<wire x1="-2.54" y1="0" x2="-3.302" y2="0.762" width="0.254" layer="94"/>
<wire x1="-2.54" y1="0" x2="-3.302" y2="-0.762" width="0.254" layer="94"/>
<pin name="AIN3" x="0" y="7.62" visible="pad" length="middle" direction="in" rot="R270"/>
<wire x1="0" y1="2.54" x2="0.762" y2="3.302" width="0.254" layer="94"/>
<wire x1="0" y1="2.54" x2="-0.762" y2="3.302" width="0.254" layer="94"/>
</symbol>
<symbol name="PARAM">
<wire x1="1.143" y1="-0.254" x2="14.478" y2="-0.254" width="0.2032" layer="95"/>
<wire x1="12.7" y1="2.032" x2="0" y2="2.032" width="0.2032" layer="95"/>
<wire x1="0" y1="2.032" x2="1.143" y2="-0.254" width="0.2032" layer="95"/>
<text x="1.27" y="0.127" size="1.016" layer="96">&gt;VALUE</text>
<wire x1="14.478" y1="-0.254" x2="12.7" y2="2.032" width="0.2032" layer="95"/>
</symbol>
</symbols>
<devicesets>
<deviceset name="VSOURCE" prefix="V" uservalue="yes">
<gates>
<gate name="G$1" symbol="VSOURCE" x="0" y="0"/>
</gates>
<devices>
<device name="" package="VSOURCE">
<connects>
<connect gate="G$1" pin="1" pad="1"/>
<connect gate="G$1" pin="2" pad="2"/>
</connects>
<technologies>
<technology name=""/>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="VCVS" prefix="E" uservalue="yes">
<gates>
<gate name="G$1" symbol="VCVS" x="-5.08" y="0"/>
</gates>
<devices>
<device name="" package="SPICE4">
<connects>
<connect gate="G$1" pin="P$1" pad="1"/>
<connect gate="G$1" pin="P$2" pad="2"/>
<connect gate="G$1" pin="P$3" pad="3"/>
<connect gate="G$1" pin="P$4" pad="4"/>
</connects>
<technologies>
<technology name=""/>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="SPICE-PORT" prefix="PIN" uservalue="yes">
<description>&lt;b&gt;Cross-Reference Port of Length 4&lt;/b&gt;
&lt;p&gt;
This is a spice presentation of a sub-circuitl port.
&lt;p&gt;
&lt;b&gt;Usage:&lt;/b&gt;
Use this port in conjunction with the &lt;i&gt;ngspice.ulp&lt;/i&gt; which treats a schematics with at least one such port placed as a sub-circuit, otherwise as top-level circuit.</description>
<gates>
<gate name="." symbol="PORT" x="0" y="0" addlevel="must"/>
</gates>
<devices>
<device name="">
<technologies>
<technology name=""/>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="ISOURCE" prefix="I" uservalue="yes">
<gates>
<gate name="G$1" symbol="ISOURCE" x="0" y="0"/>
</gates>
<devices>
<device name="" package="VSOURCE">
<connects>
<connect gate="G$1" pin="1" pad="1"/>
<connect gate="G$1" pin="2" pad="2"/>
</connects>
<technologies>
<technology name=""/>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="DFF" prefix="A">
<description>The digital d-type flip flop is a one-bit, edge-triggered storage element which will
store data whenever the clk input line transitions from low to high (ZERO to ONE). In
addition, asynchronous set and reset signals exist, and each of the three methods of changing the stored output of the d_dff have separate load values and delays associated with them. Additionally, you may specify separate rise and fall delay values that are added to those specified for the input lines; these allow for more faithful reproduction of the output characteristics of different IC fabrication technologies. Note that any UNKNOWN input on the set or reset lines immediately results in an UNKNOWN output.</description>
<gates>
<gate name="G$1" symbol="DFF" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE6">
<connects>
<connect gate="G$1" pin="!Q#" pad="6"/>
<connect gate="G$1" pin="#CLK" pad="2"/>
<connect gate="G$1" pin="#D" pad="1"/>
<connect gate="G$1" pin="#R" pad="4"/>
<connect gate="G$1" pin="#S" pad="3"/>
<connect gate="G$1" pin="Q#" pad="5"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_dff (clk_delay set_delay reset_delay data_load clk_load set_load reset_load rise_delay fall_delay ic)" constant="no"/>
<attribute name="SP_CLK_DELAY" value="1ns" constant="no"/>
<attribute name="SP_CLK_LOAD" value="1pF" constant="no"/>
<attribute name="SP_DATA_LOAD" value="1pF" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_IC" value="0" constant="no"/>
<attribute name="SP_RESET_DELAY" value="1ns" constant="no"/>
<attribute name="SP_RESET_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
<attribute name="SP_SET_DELAY" value="1ns" constant="no"/>
<attribute name="SP_SET_LOAD" value="1pF" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="ADC_BUF" prefix="A">
<description>The adc_bridge is one of two node bridge devices designed to allow for the ready
transfer of analog information to digital values and back again. The second device is the dac_bridge (which takes a digital value and maps it to an analog one). The adc_bridge takes as input an analog value from an analog node. This value by definition may be in the form of a voltage, or a current. If the input value is less than or equal to in_low, then a digital output value of “0” is generated. If the input is greater than or equal tin_high, a digital output value of “1” is generated. If neither of these is true, then a digital “UNKNOWN” value is output. Note that unlike the case of the dac_bridge, no ramping time or delay is associated with the adc_bridge. Rather, the continuous ramping of the input value provides for any associated delays in the digitized signal.</description>
<gates>
<gate name="G$1" symbol="AD" x="-2.54" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="AIN" pad="1"/>
<connect gate="G$1" pin="DOUT" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE adc_bridge(in_low in_high rise_delay fall_delay)" constant="no"/>
<attribute name="SPICE_PORTS" value="[ 1 ] [ 2 ]" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_IN_HIGH" value="2V" constant="no"/>
<attribute name="SP_IN_LOW" value="1V" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="DAC_BUF" prefix="A">
<description>The dac_bridge is the first of two node bridge devices designed to allow for the
ready transfer of digital information to analog values and back again. The second device is
the adc_bridge (which takes an analog value and maps it to a digital one).The dac_bridge takes as input a digital value from a digital node. This value by definition may take on only one of the values “0”, “1” or “U”. The dac_bridge then outputs the value “out_low”, “out_high” or “out_undef”, or ramps linearly toward one of these “final” values from its current analog output level. The speed at which this ramping occurs depends on the valuesof “t_rise” and “t_fall”. These parameters are interpreted by the model such that the rise or fall slope generated is always constant. &lt;b&gt;Note that the dac_bridge includes test code in its cfunc.mod file for determining the presence of the out_undef parameter. If this parameter is not specified by you, and if out_high and out_low values are specified, then out_undef is assigned the value of the arithmetic mean of out_high and out_low.&lt;/b&gt; This simplifies coding of output buffers, where typically a logic family will include an out_low and out_high voltage, but not an out_undef value. This model also posts an input load value (in farads) based on the parameter input load.</description>
<gates>
<gate name="G$1" symbol="DA" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="AOUT" pad="2"/>
<connect gate="G$1" pin="DIN" pad="1"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE dac_bridge(out_low out_high out_undef input_load t_rise t_fall)" constant="no"/>
<attribute name="SPICE_PORTS" value="[ 1 ] [ 2 ]" constant="no"/>
<attribute name="SP_INPUT_LOAD" value="1pF" constant="no"/>
<attribute name="SP_OUT_HIGH" value="1V" constant="no"/>
<attribute name="SP_OUT_LOW" value="0V" constant="no"/>
<attribute name="SP_OUT_UNDEF" value="0.5V" constant="no"/>
<attribute name="SP_T_FALL" value="1ns" constant="no"/>
<attribute name="SP_T_RISE" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="D2REAL" prefix="A">
<description>Node bridge from digital to real with enable</description>
<gates>
<gate name="G$1" symbol="D2R" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE3">
<connects>
<connect gate="G$1" pin="DIN" pad="1"/>
<connect gate="G$1" pin="ENABLE" pad="2"/>
<connect gate="G$1" pin="ROUT" pad="3"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_to_real (zero one delay)" constant="no"/>
<attribute name="SP_DELAY" value="1ns" constant="no"/>
<attribute name="SP_ONE" value="1" constant="no"/>
<attribute name="SP_ZERO" value="0" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="Z_DELAY" prefix="A">
<description>A Z ** -1 block working on real data</description>
<gates>
<gate name="G$1" symbol="Z" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE3">
<connects>
<connect gate="G$1" pin="#CK" pad="2"/>
<connect gate="G$1" pin="OUT~" pad="3"/>
<connect gate="G$1" pin="~IN" pad="1"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE real_delay (delay)" constant="no"/>
<attribute name="SP_DELAY" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="RGAIN" prefix="A">
<description>A gain block for event-driven real data</description>
<gates>
<gate name="G$1" symbol="RGAIN" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="RIN" pad="1"/>
<connect gate="G$1" pin="ROUT" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE real_gain(in_offset gain out_offset delay ic)" constant="no"/>
<attribute name="SP_DELAY" value="1ns" constant="no"/>
<attribute name="SP_GAIN" value="1" constant="no"/>
<attribute name="SP_IC" value="0" constant="no"/>
<attribute name="SP_IN_OFFSET" value="0" constant="no"/>
<attribute name="SP_OUT_OFFSET" value="0" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="R2V" prefix="A">
<description>Node bridge from real to analog voltage.</description>
<gates>
<gate name="G$1" symbol="R2V" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="RIN" pad="1"/>
<connect gate="G$1" pin="VOUT" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE real_to_v(gain transition_time)" constant="no"/>
<attribute name="SP_GAIN" value="1" constant="no"/>
<attribute name="SP_TRANSITION_TIME" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="SPICE-XPORT" prefix="XPIN" uservalue="yes">
<description>&lt;b&gt;External Cross-Reference Port of Length 4&lt;/b&gt;
&lt;p&gt;
This is a spice element to link an external sub-circuit port via eagle hierachy modules.</description>
<gates>
<gate name="." symbol="XPORT" x="0" y="0"/>
</gates>
<devices>
<device name="">
<technologies>
<technology name=""/>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="OSC" prefix="A">
<description>The digital oscillator is a hybrid model which accepts as input a voltage or current. 
This input is compared to the voltage-to-frequency transfer characteristic specified by the cntl_array/freq_array coordinate pairs, and a frequency is obtained which represents a linear interpolation or extrapolation based on those pairs. 
A digital time-varying signal is then produced with this fundamental frequency.
The output waveform, which is the equivalent of a digital clock signal, has rise and fall delays which can be specified independently. In addition, the duty cycle and the phase of the waveform are also variable and can be set by you.</description>
<gates>
<gate name="G$1" symbol="OSC" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="CLK#" pad="2"/>
<connect gate="G$1" pin="VCNTL" pad="1"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_osc(cntl_array freq_array duty_cycle init_phase rise_delay fall_delay)" constant="no"/>
<attribute name="SP_CNTL_ARRAY" value="[0 5]" constant="no"/>
<attribute name="SP_DUTY_CYCLE" value="0.5" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_FREQ_ARRAY" value="[1k 1MEG]" constant="no"/>
<attribute name="SP_INIT_PHASE" value="0" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="BUF" prefix="A">
<description>The buffer is a single-input, single-output digital buffer which produces as output a time-delayed copy of its input. The delays associated with an output rise and those associated with an output fall may be different. The model also posts an input load value
(in farads) based on the parameter input load. The output of this model does NOT, however, respond to the total loading it sees on its output; it will always drive the output strongly with the specified delays.</description>
<gates>
<gate name="G$1" symbol="BUF" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="I" pad="1"/>
<connect gate="G$1" pin="O" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_buffer (rise_delay fall_delay input_load)" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_INPUT_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="INV" prefix="A">
<description>The inverter is a single-input, single-output digital inverter which produces as output an inverted, time-delayed copy of its input. The delays associated with an output rise and those associated with an output fall may be specified independently. 
The model also posts an input load value (in farads) based on the parameter input load. The output of this model does NOT, however, respond to the total loading it sees on its output; it will always drive the output strongly with the specified delays.</description>
<gates>
<gate name="G$1" symbol="INV" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="I" pad="1"/>
<connect gate="G$1" pin="O" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_inverter (rise_delay fall_delay input_load)" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_INPUT_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="AND" prefix="A">
<description>The digital ‘and’ gate is an n-input, single-output ‘and’ gate which produces an active “1” value if, and only if, all of its inputs are also “1” values. 
If ANY of the inputs is a “0”, the output will also be a “0”; if neither of these conditions holds, the output will be unknown. 
The delays associated with an output rise and those associated with an output fall may be specified independently. 
The model also posts an input load value (in farads) based on the parameter input load. 
The output of this model does NOT, however, respond to the total loading it sees on its output; it will always drive the output strongly with the specified delays.</description>
<gates>
<gate name="G$1" symbol="AND" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE3">
<connects>
<connect gate="G$1" pin="I0" pad="1"/>
<connect gate="G$1" pin="I1" pad="2"/>
<connect gate="G$1" pin="O" pad="3"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_and(rise_delay fall_delay input_load)" constant="no"/>
<attribute name="SPICE_PORTS" value="[ 1 2 ] 3" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_INPUT_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="NAND" prefix="A">
<description>The digital ‘nand’ gate is an n-input, single-output ‘nand’ gate which produces
an active “0” value if and only if all of its inputs are “1” values. If ANY of the inputs
is a “0”, the output will be a “1”; if neither of these conditions holds, the output will be
unknown. The delays associated with an output rise and those associated with an output
fall may be specified independently. The model also posts an input load value (in farads)
based on the parameter input load. The output of this model does NOT, however, respond
to the total loading it sees on its output; it will always drive the output strongly with the
specified delays.</description>
<gates>
<gate name="G$1" symbol="NAND" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE3">
<connects>
<connect gate="G$1" pin="I0" pad="1"/>
<connect gate="G$1" pin="I1" pad="2"/>
<connect gate="G$1" pin="O" pad="3"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_nand(rise_delay fall_delay input_load)" constant="no"/>
<attribute name="SPICE_PORTS" value="[ 1 2 ] 3" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_INPUT_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="OR" prefix="A">
<description>The digital ‘or’ gate is an n-input, single-output ‘or’ gate which produces an
active “1” value if at least one of its inputs is a “1” value. The gate produces a “0” value
if all inputs are “0”; if neither of these two conditions holds, the output is unknown.
The delays associated with an output rise and those associated with an output fall may be
specified independently. The model also posts an input load value (in farads) based on the
parameter input load. The output of this model does NOT, however, respond to the total
loading it sees on its output; it will always drive the output strongly with the specified
delays.</description>
<gates>
<gate name="G$1" symbol="OR" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE3">
<connects>
<connect gate="G$1" pin="I0" pad="1"/>
<connect gate="G$1" pin="I1" pad="2"/>
<connect gate="G$1" pin="O" pad="3"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_or(rise_delay fall_delay input_load)" constant="no"/>
<attribute name="SPICE_PORTS" value="[ 1 2 ] 3" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_INPUT_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="NOR" prefix="A">
<description>The digital ‘nor’ gate is an n-input, single-output ‘nor’ gate which produces an
active “0” value if at least one of its inputs is a “1” value. The gate produces a “0” value
if all inputs are “0”; if neither of these two conditions holds, the output is unknown.
The delays associated with an output rise and those associated with an output fall may be
specified independently. The model also posts an input load value (in farads) based on the
parameter input load. The output of this model does NOT, however, respond to the total
loading it sees on its output; it will always drive the output strongly with the specified
delays.</description>
<gates>
<gate name="G$1" symbol="NOR" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE3">
<connects>
<connect gate="G$1" pin="I0" pad="1"/>
<connect gate="G$1" pin="I1" pad="2"/>
<connect gate="G$1" pin="O" pad="3"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_nor(rise_delay fall_delay input_load)" constant="no"/>
<attribute name="SPICE_PORTS" value="[ 1 2 ] 3" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_INPUT_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="XOR" prefix="A">
<description>The digital ‘xor’ gate is an n-input, single-output ‘xor’ gate which produces an
active “1” value if an odd number of its inputs are also “1” values. The delays associated
with an output rise and those associated with an output fall may be specified independently.
The model also posts an input load value (in farads) based on the parameter input load.
The output of this model does NOT, however, respond to the total loading it sees on its
output; it will always drive the output strongly with the specified delays. Note also that
to maintain the technology-independence of the model, any UNKNOWN input, or any
floating input causes the output to also go UNKNOWN.</description>
<gates>
<gate name="G$1" symbol="XOR" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE3">
<connects>
<connect gate="G$1" pin="I0" pad="1"/>
<connect gate="G$1" pin="I1" pad="2"/>
<connect gate="G$1" pin="O" pad="3"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_xor(rise_delay fall_delay input_load)" constant="no"/>
<attribute name="SPICE_PORTS" value="[ 1 2 ] 3" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_INPUT_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="XNOR" prefix="A">
<description>The digital ‘xnor’ gate is an n-input, single-output ‘xnor’ gate which produces an
active “0” value if an odd number of its inputs are also “1” values. It produces a “1” output
when an even number of “1” values occurs on its inputs. The delays associated with
an output rise and those associated with an output fall may be specified independently.
The model also posts an input load value (in farads) based on the parameter input load.
The output of this model does NOT, however, respond to the total loading it sees on its
output; it will always drive the output strongly with the specified delays. Note also that
to maintain the technology-independence of the model, any UNKNOWN input, or any
floating input causes the output to also go UNKNOWN.</description>
<gates>
<gate name="G$1" symbol="XNOR" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE3">
<connects>
<connect gate="G$1" pin="I0" pad="1"/>
<connect gate="G$1" pin="I1" pad="2"/>
<connect gate="G$1" pin="O" pad="3"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_xnor(rise_delay fall_delay input_load)" constant="no"/>
<attribute name="SPICE_PORTS" value="[ 1 2 ] 3" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_INPUT_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="BUFEN" prefix="A">
<description>The digital tristate is a simple tristate gate which can be configured to allow for
open-collector behavior, as well as standard tristate behavior. The state seen on the input
line is reflected in the output. The state seen on the enable line determines the strength of
the output. Thus, a ONE forces the output to its state with a STRONG strength. A ZERO
forces the output to go to a HI_IMPEDANCE strength. The delays associated with an
output state or strength change cannot be specified independently, nor may they be specified independently for rise or fall conditions; other gate models may be used to provide
such delays if needed. The model posts input and enable load values (in farads) based
on the parameters input load and enable.The output of this model does NOT, however,
respond to the total loading it sees on its output; it will always drive the output with the
specified delay. Note also that to maintain the technology-independence of the model,
any UNKNOWN input, or any floating input causes the output to also go UNKNOWN.
Likewise, any UNKNOWN input on the enable line causes the output to go to an UNDETERMINED strength value.</description>
<gates>
<gate name="G$1" symbol="TRISTATE" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE3">
<connects>
<connect gate="G$1" pin="EN" pad="2"/>
<connect gate="G$1" pin="I" pad="1"/>
<connect gate="G$1" pin="O" pad="3"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_tristate(delay input_load enable_load)" constant="no"/>
<attribute name="SP_DELAY" value="1ns" constant="no"/>
<attribute name="SP_ENABLE_LOAD" value="1pF" constant="no"/>
<attribute name="SP_INPUT_LOAD" value="1pF" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="PUP" prefix="A">
<description>The digital pullup resistor is a device which emulates the behavior of an analog
resistance value tied to a high voltage level. The pullup may be used in conjunction
with tristate buffers to provide open-collector wired “or” constructs, or any other logical
constructs which rely on a resistive pullup common to many tristated output devices. The
model posts an input load value (in farads) based on the parameters “load”.</description>
<gates>
<gate name="G$1" symbol="PULLUP" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE1">
<connects>
<connect gate="G$1" pin="1" pad="1"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_pullup( load )" constant="no"/>
<attribute name="SP_LOAD" value="1pF" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="PDN" prefix="A">
<description>The digital pulldown resistor is a device which emulates the behavior of an analog
resistance value tied to a low voltage level. The pulldown may be used in conjunction
with tristate buffers to provide open-collector wired “or” constructs, or any other logical
constructs which rely on a resistive pulldown common to many tristated output devices.
The model posts an input load value (in farads) based on the parameters “load”.</description>
<gates>
<gate name="G$1" symbol="PULLDOWN" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE1">
<connects>
<connect gate="G$1" pin="1" pad="1"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_pulldown( load )" constant="no"/>
<attribute name="SP_LOAD" value="1pF" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="JKFF" prefix="A">
<description>The digital jk-type flip flop is a one-bit, edge-triggered storage element which
will store data whenever the clk input line transitions from low to high (ZERO to ONE).
In addition, asynchronous set and reset signals exist, and each of the three methods of
changing the stored output of the d_jkff have separate load values and delays associated
with them. Additionally, you may specify separate rise and fall delay values that are
added to those specified for the input lines; these allow for more faithful reproduction of
the output characteristics of different IC fabrication technologies.
Note that any UNKNOWN inputs other than j or k cause the output to go UNKNOWN
automatically.</description>
<gates>
<gate name="G$1" symbol="JKFF" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE7">
<connects>
<connect gate="G$1" pin="!Q#" pad="7"/>
<connect gate="G$1" pin="#CLK" pad="3"/>
<connect gate="G$1" pin="#J" pad="1"/>
<connect gate="G$1" pin="#K" pad="2"/>
<connect gate="G$1" pin="#R" pad="5"/>
<connect gate="G$1" pin="#S" pad="4"/>
<connect gate="G$1" pin="Q#" pad="6"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_jkff (clk_delay set_delay reset_delay ic jk_load clk_load set_load reset_load rise_delay fall_delay)" constant="no"/>
<attribute name="SP_CLK_DELAY" value="1ns" constant="no"/>
<attribute name="SP_CLK_LOAD" value="1pF" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_IC" value="0" constant="no"/>
<attribute name="SP_JK_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RESET_DELAY" value="1ns" constant="no"/>
<attribute name="SP_RESET_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
<attribute name="SP_SET_DELAY" value="1ns" constant="no"/>
<attribute name="SP_SET_LOAD" value="1pF" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="TFF" prefix="A">
<description>The digital toggle-type flip flop is a one-bit, edge-triggered storage element which
will toggle its current state whenever the clk input line transitions from low to high (ZERO to ONE). 
In addition, asynchronous set and reset signals exist, and each of the three meth-
ods of changing the stored output of the d_tff have separate load values and delays associated 
with them. Additionally, you may specify separate rise and fall delay values that
are added to those specified for the input lines; these allow for more faithful reproduction
of the output characteristics of different IC fabrication technologies.
Note that any UNKNOWN inputs other than t immediately cause the output to go UNKNOWN.</description>
<gates>
<gate name="G$1" symbol="TFF" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE6">
<connects>
<connect gate="G$1" pin="!Q#" pad="6"/>
<connect gate="G$1" pin="#CLK" pad="2"/>
<connect gate="G$1" pin="#R" pad="4"/>
<connect gate="G$1" pin="#S" pad="3"/>
<connect gate="G$1" pin="#T" pad="1"/>
<connect gate="G$1" pin="Q#" pad="5"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_tff (clk_delay set_delay reset_delay ic t_load clk_load set_load reset_load rise_delay fall_delay)" constant="no"/>
<attribute name="SP_CLK_DELAY" value="1ns" constant="no"/>
<attribute name="SP_CLK_LOAD" value="1pF" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_IC" value="0" constant="no"/>
<attribute name="SP_RESET_DELAY" value="1ns" constant="no"/>
<attribute name="SP_RESET_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
<attribute name="SP_SET_DELAY" value="1ns" constant="no"/>
<attribute name="SP_SET_LOAD" value="1pF" constant="no"/>
<attribute name="SP_T_LOAD" value="1pF" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="DLATCH" prefix="A">
<description>The digital d-type latch is a one-bit, level-sensitive storage element which will
output the value on the data line whenever the enable input line is high (ONE). The
value on the data line is stored (i.e., held on the out line) whenever the enable line is low
(ZERO).
In addition, asynchronous set and reset signals exist, and each of the four methods of
changing the stored output of the d_dlatch (i.e., data changing with enable=ONE, enable
changing to ONE from ZERO with a new value on data, raising set and raising reset) have
separate delays associated with them. You may also specify separate rise and fall delay
values that are added to those specified for the input lines; these allow for more faithful
reproduction of the output characteristics of different IC fabrication technologies.
Note that any UNKNOWN inputs other than on the data line when enable=ZERO immediately
cause the output to go UNKNOWN.</description>
<gates>
<gate name="G$1" symbol="DLATCH" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE6">
<connects>
<connect gate="G$1" pin="!Q#" pad="6"/>
<connect gate="G$1" pin="#D" pad="1"/>
<connect gate="G$1" pin="#EN" pad="2"/>
<connect gate="G$1" pin="#R" pad="4"/>
<connect gate="G$1" pin="#S" pad="3"/>
<connect gate="G$1" pin="Q#" pad="5"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_dlatch (data_delay enable_delay set_delay reset_delay ic data_load enable_load set_load reset_load rise_delay fall_delay)" constant="no"/>
<attribute name="SP_DATA_DELAY" value="1ns" constant="no"/>
<attribute name="SP_DATA_LOAD" value="1pF" constant="no"/>
<attribute name="SP_ENABLE_DELAY" value="1ns" constant="no"/>
<attribute name="SP_ENABLE_LOAD" value="1pF" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_IC" value="0" constant="no"/>
<attribute name="SP_RESET_DELAY" value="1ns" constant="no"/>
<attribute name="SP_RESET_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
<attribute name="SP_SET_DELAY" value="1ns" constant="no"/>
<attribute name="SP_SET_LOAD" value="1pF" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="SRLATCH" prefix="A">
<description>The digital sr-type latch is a one-bit, level-sensitive storage element which will
output the value dictated by the state of the s and r pins whenever the enable input line
is high (ONE). This value is stored (i.e., held on the out line) whenever the enable line is
low (ZERO). The particular value chosen is as shown below:

&lt;ul&gt;
&lt;li&gt;s=ZERO, r=ZERO =&gt; out=current value (i.e., not change in output)
&lt;li&gt;s=ZERO, r=ONE =&gt; out=ZERO
&lt;li&gt;s=ONE, r=ZERO =&gt; out=ONE
&lt;li&gt;s=ONE, r=ONE =&gt; out=UNKNOWN
&lt;/ul&gt;

Asynchronous set and reset signals exist, and each of the four methods of changing the stored
output of the d srlatch (i.e., s/r combination changing with enable=ONE, enable changing to
ONE from ZERO with an output-changing combination of s and r, raising set and raising reset) 
have separate delays associated with them. You may also specify separate rise and fall
delay values that are added to those specified for the input lines; these allow for more faithful
reproduction of the output characteristics of different IC fabrication technologies.
Note that any UNKNOWN inputs other than on the s and r lines when enable=ZERO immediately
cause the output to go UNKNOWN.</description>
<gates>
<gate name="G$1" symbol="SRLATCH" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE7">
<connects>
<connect gate="G$1" pin="!Q#" pad="7"/>
<connect gate="G$1" pin="#AR" pad="5"/>
<connect gate="G$1" pin="#AS" pad="4"/>
<connect gate="G$1" pin="#EN" pad="3"/>
<connect gate="G$1" pin="#R" pad="2"/>
<connect gate="G$1" pin="#S" pad="1"/>
<connect gate="G$1" pin="Q#" pad="6"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_srlatch (sr_delay enable_delay set_delay reset_delay ic sr_load enable_load set_load reset_load rise_delay fall_delay)" constant="no"/>
<attribute name="SP_ENABLE_DELAY" value="1ns" constant="no"/>
<attribute name="SP_ENABLE_LOAD" value="1pF" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_IC" value="0" constant="no"/>
<attribute name="SP_RESET_DELAY" value="1ns" constant="no"/>
<attribute name="SP_RESET_LOAD" value="1pF" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
<attribute name="SP_SET_DELAY" value="1ns" constant="no"/>
<attribute name="SP_SET_LOAD" value="1pF" constant="no"/>
<attribute name="SP_SR_DELAY" value="1ns" constant="no"/>
<attribute name="SP_SR_LOAD" value="1pF" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="FDIV" prefix="A">
<description>The digital frequency divider is a programmable step-down divider which accepts
an arbitrary divisor (div_factor), a duty-cycle term (high_cycles), and an initial count
value (i_count). The generated output is synchronized to the rising edges of the input
signal. Rise delay and fall delay on the outputs may also be specified independently.</description>
<gates>
<gate name="G$1" symbol="FDIV" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="#FIN" pad="1"/>
<connect gate="G$1" pin="FOUT#" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_fdiv( div_factor high_cycles i_count rise_delay fall_delay freq_in_load)" constant="no"/>
<attribute name="SP_DIV_FACTOR" value="2" constant="no"/>
<attribute name="SP_FALL_DELAY" value="1ns" constant="no"/>
<attribute name="SP_FREQ_IN_LOAD" value="1pF" constant="no"/>
<attribute name="SP_HIGH_CYCLES" value="1" constant="no"/>
<attribute name="SP_I_COUNT" value="0" constant="no"/>
<attribute name="SP_RISE_DELAY" value="1ns" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="SUM" prefix="A">
<description>This function is a summer block with 2-to-N input ports. Individual gains and
offsets can be applied to each input and to the output. Each input is added to its respective
offset and then multiplied by its gain. The results are then summed, multiplied by the
output gain and added to the output offset. This model will operate in DC, AC, and
Transient analysis modes.</description>
<gates>
<gate name="G$1" symbol="SUM" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE3">
<connects>
<connect gate="G$1" pin="AIN1" pad="1"/>
<connect gate="G$1" pin="AIN2" pad="2"/>
<connect gate="G$1" pin="AOUT" pad="3"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE summer(in_offset in_gain out_gain out_offset)" constant="no"/>
<attribute name="SPICE_PORTS" value="[ 1 2 ] 3" constant="no"/>
<attribute name="SP_IN_GAIN" value="[1 1]" constant="no"/>
<attribute name="SP_IN_OFFSET" value="[0 0]" constant="no"/>
<attribute name="SP_OUT_GAIN" value="1" constant="no"/>
<attribute name="SP_OUT_OFFSET" value="0" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="GAIN" prefix="A">
<description>This function is a simple gain block with optional offsets on the input and the
output. The input offset is added to the input, the sum is then multiplied by the gain, and
the result is produced by adding the output offset. This model will operate in DC, AC,
and Transient analysis modes.</description>
<gates>
<gate name="G$1" symbol="GAIN" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="AIN" pad="1"/>
<connect gate="G$1" pin="AOUT" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE gain(in_offset gain out_offset)" constant="no"/>
<attribute name="SP_GAIN" value="1" constant="no"/>
<attribute name="SP_IN_OFFSET" value="0" constant="no"/>
<attribute name="SP_OUT_OFFSET" value="0" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="MUL" prefix="A">
<description>This function is a multiplier block with 2-to-N input ports. Individual gains and
offsets can be applied to each input and to the output. Each input is added to its respective
offset and then multiplied by its gain. The results are multiplied along with the output
gain and are added to the output offset. This model will operate in DC, AC, and Transient
analysis modes. However, in ac analysis it is important to remember that results are
invalid unless only ONE INPUT of the multiplier is connected to a node which bears
an AC signal (this is exemplified by the use of a multiplier to perform a potentiometer
function: one input is DC, the other carries the AC signal).</description>
<gates>
<gate name="G$1" symbol="MUL" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE3">
<connects>
<connect gate="G$1" pin="AIN1" pad="1"/>
<connect gate="G$1" pin="AIN2" pad="2"/>
<connect gate="G$1" pin="AOUT" pad="3"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE mult(out_gain out_offset)" constant="no"/>
<attribute name="SPICE_PORTS" value="[ 1 2 ] 3" constant="no"/>
<attribute name="SP_OUT_GAIN" value="1" constant="no"/>
<attribute name="SP_OUT_OFFSET" value="0" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="DIV" prefix="A">
<description>This function is a two-quadrant divider. It takes two inputs; num (numerator) and
den (denominator). Divide offsets its inputs, multiplies them by their respective gains,
divides the results, multiplies the quotient by the output gain, and offsets the result. The
denominator is limited to a value above zero via a user specified lower limit. This limit is
approached through a quadratic smoothing function, the domain of which may be specified as 
a fraction of the lower limit value (default), or as an absolute value. This model
will operate in DC, AC and Transient analysis modes. However, in ac analysis it is important 
to remember that results are invalid unless only ONE INPUT of the divider is
connected to a node which bears an AC signal (this is exemplified by the use of the divider 
to perform a potentiometer function: one input is DC, the other carries the AC
signal).</description>
<gates>
<gate name="G$1" symbol="DIV" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE3">
<connects>
<connect gate="G$1" pin="AIN" pad="1"/>
<connect gate="G$1" pin="AOUT" pad="3"/>
<connect gate="G$1" pin="BIN" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE divide(num_offset num_gain den_offset den_gain den_lower_limit den_domain fraction out_gain out_offset)" constant="no"/>
<attribute name="SP_DEN_DOMAIN" value="1e-10" constant="no"/>
<attribute name="SP_DEN_GAIN" value="1" constant="no"/>
<attribute name="SP_DEN_LOWER_LIMIT" value="1e-10" constant="no"/>
<attribute name="SP_DEN_OFFSET" value="0" constant="no"/>
<attribute name="SP_FRACTION" value="false" constant="no"/>
<attribute name="SP_NUM_GAIN" value="1" constant="no"/>
<attribute name="SP_NUM_OFFSET" value="0" constant="no"/>
<attribute name="SP_OUT_GAIN" value="1" constant="no"/>
<attribute name="SP_OUT_OFFSET" value="0" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="LIMITER" prefix="A">
<description>The Limiter is a single input, single output function similar to the Gain Block.
However, the output of the Limiter function is restricted to the range specified by the
output lower and upper limits. This model will operate in DC, AC and Transient analysis
modes. Note that the limit range is the value BELOW THE UPPER LIMIT AND ABOVE
THE LOWER LIMIT at which smoothing of the output begins. For this model, then, the
limit range represents the delta WITH RESPECT TO THE OUTPUT LEVEL at which
smoothing occurs. Thus, for an input gain of 2.0 and output limits of 1.0 and -1.0 volts,
the output will begin to smooth out at ±0.9 volts, which occurs when the input value is at
±0.4.</description>
<gates>
<gate name="G$1" symbol="LIMITER" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="AIN" pad="1"/>
<connect gate="G$1" pin="AOUT" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE limit(in_offset gain out_lower_limit out_upper_limit limit_range fraction)" constant="no"/>
<attribute name="SP_FRACTION" value="false" constant="no"/>
<attribute name="SP_GAIN" value="1" constant="no"/>
<attribute name="SP_IN_OFFSET" value="0" constant="no"/>
<attribute name="SP_LIMIT_RANGE" value="1e-6" constant="no"/>
<attribute name="SP_OUT_LOWER_LIMIT" value="0" constant="no"/>
<attribute name="SP_OUT_UPPER_LIMIT" value="1" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="CLIMITER" prefix="A">
<description>The Controlled Limiter is a single input, single output function similar to the Gain
Block. However, the output of the Limiter function is restricted to the range specified by
the output lower and upper limits. This model will operate in DC, AC, and Transient analysis modes. 
Note that the limit range is the value BELOW THE CNTL_UPPER LIMIT
AND ABOVE THE CNTL_LOWER LIMIT at which smoothing of the output begins
(minimum positive value of voltage must exist between the CNTL_UPPER input and the
CNTL_LOWER input at all times). For this model, then, the limit range represents the
delta WITH RESPECT TO THE OUTPUT LEVEL at which smoothing occurs. Thus,
for an input gain of 2.0 and output limits of 1.0 and -1.0 volts, the output will begin to
smooth out at ±0.9 volts, which occurs when the input value is at ±0.4. Note also that
the Controlled Limiter code tests the input values of cntl_lower and cntl_upper to make
sure that they are spaced far enough apart to guarantee the existence of a linear range between them. 
The range is calculated as the difference between (cntl_upper - upper_delta
- limit_range) and (cntl_lower + lower_delta + limit_range) and must be greater than or
equal to zero. Note that when the limit range is specified as a fractional value, the limit
range used in the above is taken as the calculated fraction of the difference between cntl
upper and cntl lower. Still, the potential exists for too great a limit range value to be
specified for proper operation, in which case the model will return an error message.</description>
<gates>
<gate name="G$1" symbol="CLIMITER" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE4">
<connects>
<connect gate="G$1" pin="AIN" pad="1"/>
<connect gate="G$1" pin="ALOWER" pad="3"/>
<connect gate="G$1" pin="AOUT" pad="4"/>
<connect gate="G$1" pin="AUPPER" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE climit(in_offset gain upper_delta lower_delta limit_range fraction)" constant="no"/>
<attribute name="SP_FRACTION" value="false" constant="no"/>
<attribute name="SP_GAIN" value="1" constant="no"/>
<attribute name="SP_IN_OFFSET" value="0" constant="no"/>
<attribute name="SP_LIMIT_RANGE" value="1e-6" constant="no"/>
<attribute name="SP_LOWER_DELTA" value="0" constant="no"/>
<attribute name="SP_UPPER_DELTA" value="0" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="ASWITCH" prefix="A">
<description>The Analog Switch is a resistor that varies either logarithmically or linearly between 
specified values of a controlling input voltage or current. Note that the input is
not internally limited. Therefore, if the controlling signal exceeds the specified OFF state
or ON state value, the resistance may become excessively large or excessively small (in the case of logarithmic dependence), 
or may become negative (in the case of linear dependence). 
For the experienced user, these excursions may prove valuable for modeling
certain devices, but in most cases you are advised to add limiting of the controlling input
if the possibility of excessive control value variation exists.</description>
<gates>
<gate name="G$1" symbol="ASWITCH" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE3">
<connects>
<connect gate="G$1" pin="CNTL" pad="1"/>
<connect gate="G$1" pin="R1" pad="2"/>
<connect gate="G$1" pin="R2" pad="3"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE aswitch(cntl_off cntl_on r_off r_on log)" constant="no"/>
<attribute name="SPICE_PORTS" value="1 ( 2 3 )" constant="no"/>
<attribute name="SP_CNTL_OFF" value="0" constant="no"/>
<attribute name="SP_CNTL_ON" value="1" constant="no"/>
<attribute name="SP_LOG" value="false" constant="no"/>
<attribute name="SP_R_OFF" value="1e12" constant="no"/>
<attribute name="SP_R_ON" value="1" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="ZENER" prefix="A">
<description>The Zener Diode models the DC characteristics of most zeners. This model
differs from the Diode/Rectifier by providing a user-defined dynamic resistance in the
reverse breakdown region. The forward characteristic is defined by only a single point,
since most data sheets for zener diodes do not give detailed characteristics in the forward
region.
&lt;p&gt;
The first three parameters define the DC characteristics of the zener in the breakdown
region and are usually explicitly given on the data sheet.
The saturation current refers to the relatively constant reverse current that is produced
when the voltage across the zener is negative, but breakdown has not been reached. The
reverse leakage current determines the slight increase in reverse current as the voltage
across the zener becomes more negative. It is modeled as a resistance parallel to the
zener with value v breakdown / i rev.
&lt;p&gt;
Note that the limit switch parameter engages an internal limiting function for the zener.
This can, in some cases, prevent the simulator from converging to an unrealistic solution
if the voltage across or current into the device is excessive. If use of this feature fails to
yield acceptable results, the convlimit option should be tried (add the following statement
to the SPICE input deck: .options convlimit).</description>
<gates>
<gate name="G$1" symbol="ZD" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="A" pad="1"/>
<connect gate="G$1" pin="C" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE zener(v_breakdown i_breakdown i_sat n_forward limit_switch)" constant="no"/>
<attribute name="SP_I_BREAKDOWN" value="2e-2" constant="no"/>
<attribute name="SP_I_SAT" value="1e-12" constant="no"/>
<attribute name="SP_LIMIT_SWITCH" value="false" constant="no"/>
<attribute name="SP_N_FORWARD" value="1" constant="no"/>
<attribute name="SP_V_BREAKDOWN" value="4.7" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="DT" prefix="A">
<description>The Differentiator block is a simple derivative stage that approximates the time
derivative of an input signal by calculating the incremental slope of that signal since the
previous time point. The block also includes gain and output offset parameters to allow
for tailoring of the required signal, and output upper and lower limits to prevent convergence 
errors resulting from excessively large output values. The incremental value of
output below the output upper limit and above the output lower limit at which smoothing
begins is specified via the limit range parameter. In AC analysis, the value returned is
equal to the radian frequency of analysis multiplied by the gain.
Note that since truncation error checking is not included in the d_dt block, it is not recommended 
that the model be used to provide an integration function through the use of
a feedback loop. Such an arrangement could produce erroneous results. Instead, you
should make use of the "integrate" model, which does include truncation error checking
for enhanced accuracy.</description>
<gates>
<gate name="G$1" symbol="DIFF" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="AIN" pad="1"/>
<connect gate="G$1" pin="AOUT" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE d_dt(gain out_offset out_lower_limit out_upper_limit limit_range)" constant="no"/>
<attribute name="SP_GAIN" value="1" constant="no"/>
<attribute name="SP_LIMIT_RANGE" value="1e-6" constant="no"/>
<attribute name="SP_OUT_LOWER_LIMIT" value="1e-10" constant="no"/>
<attribute name="SP_OUT_OFFSET" value="0" constant="no"/>
<attribute name="SP_OUT_UPPER_LIMIT" value="1e10" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="INT" prefix="A">
<description>The Integrator block is a simple integration stage that approximates the integral
with respect to time of an input signal. The block also includes gain and input offset
parameters to allow for tailoring of the required signal, and output upper and lower limits
to prevent convergence errors resulting from excessively large output values. Note that
these limits specify integrator behavior similar to that found in an operational amplifierbased integration stage, 
in that once a limit is reached, additional storage does not occur.
Thus, the input of a negative value to an integrator which is currently driving at the out
upper limit level will immediately cause a drop in the output, regardless of how long
the integrator was previously summing positive inputs. The incremental value of output
below the output upper limit and above the output lower limit at which smoothing begins
is specified via the limit range parameter. In AC analysis, the value returned is equal to
the gain divided by the radian frequency of analysis.
Note that truncation error checking is included in the “int” block. This should provide
for a more accurate simulation of the time integration function, since the model will
inherently request smaller time increments between simulation points if truncation errors
would otherwise be excessive.</description>
<gates>
<gate name="G$1" symbol="INTEG" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="AIN" pad="1"/>
<connect gate="G$1" pin="AOUT" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE int(in_offset gain out_lower_limit out_upper_limit limit_range out_ic)" constant="no"/>
<attribute name="SP_GAIN" value="1" constant="no"/>
<attribute name="SP_IN_OFFSET" value="0" constant="no"/>
<attribute name="SP_LIMIT_RANGE" value="1e-6" constant="no"/>
<attribute name="SP_OUT_IC" value="0" constant="no"/>
<attribute name="SP_OUT_LOWER_LIMIT" value="-1e12" constant="no"/>
<attribute name="SP_OUT_UPPER_LIMIT" value="1e12" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="XFER" prefix="A">
<description>The s-domain transfer function is a single input, single output transfer function
in the Laplace transform variable “s” that allows for flexible modulation of the frequency
domain characteristics of a signal. Ac and transient simulations are supported. The code
model may be configured to produce an arbitrary s-domain transfer function with the
following restrictions:
&lt;ul&gt;
&lt;li&gt;The degree of the numerator polynomial cannot exceed that
of the denominator polynomial in the variable "s".
&lt;li&gt;The coefficients for a polynomial must be stated
explicitly. That is, if a coefficient is zero, it must be
included as an input to the num coeff or den coeff vector.
&lt;/ul&gt;
The order of the coefficient parameters is from that associated with the highest-powered term
decreasing to that of the lowest. Thus, for the coefficient parameters specified below, the equa-
tion in “s” is shown:
&lt;ul&gt;
&lt;li&gt;gain=0.139713 int_ic=[0 0 0]
&lt;li&gt;num_coeff=[1.0 0.0 0.07464102]
&lt;li&gt;den_coeff=[1.0 0.998942 0.01170077])
&lt;/ul&gt;
specifies a transfer function of the form:
&lt;ul&gt;
N(s) = 0.139713 * (s^2 + 0.07464102) / (s^2 + 0.998942 s + 0.01170077)
&lt;/ul&gt;
The s-domain transfer function includes gain and in_offset (input offset) parameters to allow
for tailoring of the required signal. There are no limits on the internal signal values or on
the output value of the s-domain transfer function, so you are cautioned to specify gain and
coefficient values that will not cause the model to produce excessively large values. In AC
analysis, the value returned is equal to the real and imaginary components of the total s-domain
transfer function at each frequency of interest.
&lt;p&gt;
The denormalized_freq term allows you to specify coefficients for a normalized filter (i.e. one
in which the frequency of interest is 1 rad/s). Once these coefficients are included, specifying
the denormalized frequency value “shifts” the corner frequency to the actual one of interest. As
an example, the following transfer function describes a Chebyshev low-pass filter with a corner
(pass-band) frequency of 1 rad/s:
&lt;ul&gt;
N(s) = 0.139713 * 1 / (s^2 +1.09773s+1.10251)
&lt;/ul&gt;
In order to define an s_xfer model for the above, but with the corner frequency equal to 1500
rad/s (9425 Hz), the following instance and model lines would be needed:
&lt;ul&gt;
&lt;li&gt;num_coeff=[1]
&lt;li&gt;den_coeff=[1 1.09773 1.10251]
&lt;li&gt;int_ic=[0 0 0]
&lt;li&gt;denormalized_freq=1500
&lt;/ul&gt;
In the above, you add the normalized coefficients and scale the filter through the use of the
denormalized freq parameter. Similar results could have been achieved by performing the denormalization 
prior to specification of the coefficients, and setting denormalized freq to the
value 1.0 (or not specifying the frequency, as the default is 1.0 rad/s) Note in the above that
frequencies are ALWAYS SPECIFIED AS RADIANS/SECOND.
&lt;p&gt;
Truncation error checking is included in the s-domain transfer block. This should provide for
more accurate simulations, since the model will inherently request smaller time increments
between simulation points if truncation errors would otherwise be excessive.
&lt;p&gt;
The int_ic parameter is an array that must be of the same size as the array of values specified
for the den_coeff parameter. Even if a 0 start value is required, you have to add the specific
int_ic vector to the set of coefficients (see the examples above).</description>
<gates>
<gate name="G$1" symbol="XFER" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="AIN" pad="1"/>
<connect gate="G$1" pin="AOUT" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE s_xfer(in_offset gain num_coeff den_coeff int_ic denormalized_freq)" constant="no"/>
<attribute name="SP_DENORMALIZED_FREQ" value="1" constant="no"/>
<attribute name="SP_DEN_COEFF" value="[1.0 0.998942 0.01170077]" constant="no"/>
<attribute name="SP_GAIN" value="1" constant="no"/>
<attribute name="SP_INT_IC" value="[0 0 0]" constant="no"/>
<attribute name="SP_IN_OFFSET" value="0" constant="no"/>
<attribute name="SP_NUM_COEFF" value="[1.0 0.0 0.07464102]" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="SLEW" prefix="A">
<description>This function is a simple slew rate block that limits the absolute slope of the
output with respect to time to some maximum or value. The actual slew rate effects of
over-driving an amplifier circuit can thus be accurately modeled by cascading the amplifier with this model. 
The units used to describe the maximum rising and falling slope
values are expressed in volts or amperes per second. Thus a desired slew rate of 0.5 V/μs
will be expressed as 0.5e+6, etc.
&lt;p&gt;
The slew rate block will continue to raise or lower its output until the difference between
the input and the output values is zero. Thereafter, it will resume following the input signal, 
unless the slope again exceeds its rise or fall slope limits. The range input specifies
a smoothing region above or below the input value. Whenever the model is slewing and
the output comes to within the input + or - the range value, the partial derivative of the
output with respect to the input will begin to smoothly transition from 0.0 to 1.0. When
the model is no longer slewing (output = input), dout/din will equal 1.0.</description>
<gates>
<gate name="G$1" symbol="SLEW" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="AIN" pad="1"/>
<connect gate="G$1" pin="AOUT" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE slew(rise_slope fall_slope range)" constant="no"/>
<attribute name="SP_FALL_SLOPE" value="1e9" constant="no"/>
<attribute name="SP_RANGE" value="" constant="no"/>
<attribute name="SP_RISE_SLOPE" value="1e9" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="HYST" prefix="A">
<description>The Hysteresis block is a simple buffer stage that provides hysteresis of the output
with respect to the input. The in low and in high parameter values specify the center
voltage or current inputs about which the hysteresis effect operates. The output values
are limited to out lower limit and out upper limit. The value of “hyst” is added to the in
low and in high points in order to specify the points at which the slope of the hysteresis
function would normally change abruptly as the input transitions from a low to a high
value. Likewise, the value of “hyst” is subtracted from the in high and in low values in
order to specify the points at which the slope of the hysteresis function would normally
change abruptly as the input transitions from a high to a low value. In fact, the slope of the
hysteresis function is never allowed to change abruptly but is smoothly varied whenever
the input domain smoothing parameter is set greater than zero.</description>
<gates>
<gate name="G$1" symbol="HYST" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE2">
<connects>
<connect gate="G$1" pin="AIN" pad="1"/>
<connect gate="G$1" pin="AOUT" pad="2"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE hyst(in_low in_high hyst out_lower_limit out_upper_limit input_domain fraction)" constant="no"/>
<attribute name="SP_FRACTION" value="true" constant="no"/>
<attribute name="SP_HYST" value="0.1" constant="no"/>
<attribute name="SP_INPUT_DOMAIN" value="0.01" constant="no"/>
<attribute name="SP_IN_HIGH" value="1" constant="no"/>
<attribute name="SP_IN_LOW" value="0" constant="no"/>
<attribute name="SP_OUT_LOWER_LIMIT" value="0" constant="no"/>
<attribute name="SP_OUT_UPPER_LIMIT" value="1" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="SUM3" prefix="A">
<description>This function is a summer block with 2-to-N input ports. Individual gains and
offsets can be applied to each input and to the output. Each input is added to its respective
offset and then multiplied by its gain. The results are then summed, multiplied by the
output gain and added to the output offset. This model will operate in DC, AC, and
Transient analysis modes.</description>
<gates>
<gate name="G$1" symbol="SUM3" x="0" y="0"/>
</gates>
<devices>
<device name="" package="SPICE4">
<connects>
<connect gate="G$1" pin="AIN1" pad="1"/>
<connect gate="G$1" pin="AIN2" pad="2"/>
<connect gate="G$1" pin="AIN3" pad="3"/>
<connect gate="G$1" pin="AOUT" pad="4"/>
</connects>
<technologies>
<technology name="">
<attribute name="SPICE_MODEL" value=".model &gt;VALUE summer(in_offset in_gain out_gain out_offset)" constant="no"/>
<attribute name="SPICE_PORTS" value="[ 1 2 3 ] 4" constant="no"/>
<attribute name="SP_IN_GAIN" value="[1 1 1]" constant="no"/>
<attribute name="SP_IN_OFFSET" value="[0 0 0]" constant="no"/>
<attribute name="SP_OUT_GAIN" value="1" constant="no"/>
<attribute name="SP_OUT_OFFSET" value="0" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
<deviceset name="SPICE-PARAM" prefix="XPIN" uservalue="yes">
<description>&lt;b&gt;Sub-circuit Parameter&lt;/b&gt;
&lt;p&gt;
When schematics is exported as a sub-circuit then it will include also parameters from this element. 
&lt;p&gt;
I.e set value to {myparam}=1
&lt;p&gt;
Will generate .subckt ... pyparam=1</description>
<gates>
<gate name="G$1" symbol="PARAM" x="0" y="0"/>
</gates>
<devices>
<device name="">
<technologies>
<technology name="">
<attribute name="SPICE_IGNORE" value="" constant="no"/>
</technology>
</technologies>
</device>
</devices>
</deviceset>
</devicesets>
</library>
</drawing>
<compatibility>
<note version="6.3" minversion="6.2.2" severity="warning">
Since Version 6.2.2 text objects can contain more than one line,
which will not be processed correctly with this version.
</note>
</compatibility>
</eagle>
